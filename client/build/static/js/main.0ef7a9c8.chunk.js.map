{"version":3,"sources":["store/actions.js","store/reducers/landlordReducer.js","store/reducers/propertyReducer.js","store/reducers/userReducer.js","store/reducers/applicationReducer.js","store/reducers.js","store/index.js","utils/token.js","config/apollo.js","apollo-client/queries.js","utils/helpers.js","components/UserPropertyCard.js","components/LandlordPropertyCard.js","components/PropertyList.js","pages/Home.js","config/history.js","apollo-client/mutations.js","pages/Login.js","pages/About.js","pages/Signup.js","pages/Messages.js","pages/landlord/index.js","pages/landlord/AddProperty.js","pages/landlord/DeleteProperty.js","pages/landlord/EditProperty.js","pages/landlord/ReviewApplications.js","pages/landlord/SingleApplication.js","pages/tenant/index.js","pages/tenant/TenantSaved.js","pages/profile/index.js","pages/profile/UpdatePassword.js","pages/profile/UpdateProfile.js","pages/Application.js","pages/ImageUpload.js","components/Header.js","App.js","index.js"],"names":["LOG_IN","LOG_OUT","UPDATE_USER","FETCH_ALL_PROPERTIES","EDIT_PROPERTY","DELETE_PROPERTY","ADD_PROPERTY","FETCH_MY_PROPERTIES","ADD_MY_PROPERTY","EDIT_MY_PROPERTY","DELETE_MY_PROPERTY","FETCH_APPLICATIONS","EDIT_APPLICATIONS","propertyReducer","state","action","type","_","mapKeys","payload","_id","currentValues","updatedValues","omit","userReducer","applicationReducer","reducers","combineReducers","user","properties","landlord","landlordReducer","applications","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","StoreProvider","props","getToken","localStorage","getItem","saveToken","token","setItem","httpLink","createHttpLink","uri","authLink","setContext","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","QUERY_ALL_PROPERTIES","gql","QUERY_MY_PROPERTIES","QUERY_ME","QUERY_APPLICATIONS","checkEmail","email","test","toLowerCase","checkName","name","formatPrice","price","Intl","NumberFormat","style","currency","maximumFractionDigits","format","UserPropertyCard","property","addressStreet","addressCity","addressState","addressZip","images","description","owner","firstName","lastName","className","cloudName","publicId","alt","to","LandlordPropertyCard","class","PropertyList","isLandlord","length","map","Home","dispatch","useDispatch","useSelector","Object","values","useQuery","loading","data","useEffect","allProperties","createBrowserHistory","LOGIN","SIGN_UP","ADD_USER_IMAGE","ADD_PROPERTY_IMAGE","UPLOAD_IMAGE","CHANGE_PASSWORD","UPDATE_PROPERTY","ADD_APPLICATION","UPDATE_APPLICATION","UPDATE_TENANT","Login","useState","setEmail","password","setPassword","displayError","setDisplayError","useMutation","login","handleForm","error","e","a","preventDefault","variables","userData","userDataRes","console","log","history","push","src","process","onSubmit","htmlFor","placeholder","autoComplete","value","onChange","target","aria-hidden","About","href","width","height","fill","viewBox","d","xmlns","Signup","signUp","username","password_2","is_landlord","formState","setFormState","image","reduxData","handleInput","checked","defaultValue","Messages","Landlord","useLazyQuery","fetchProperties","myProperties","AddProperty","addProperty","rent","buildInput","parseInt","propertyData","propertyId","rows","DeleteProperty","match","params","id","deleteProperty","deleteProp","DELETE_FROM_MAIN","onClick","EditProperty","oldInfo","updateProperty","tenant","ReviewApplications","myApplications","app","applicant","status","SingleApplication","application","updateApplication","updateTenant","handleApplication","newStatus","readOnly","creditScore","grossAnnualIncome","otherTenants","employer","typeOfEmployment","Tenant","current_property","stroke","strokeLinecap","strokeLinejoin","strokeWidth","TenantSaved","Profile","fillRule","clipRule","Password","changePassword","newPassword","newPassword2","Update","updateUser","fileInputState","setFileInputState","bio","event","file","files","reader","FileReader","readAsDataURL","result","onload","Application","initialState","first","last","income","street","city","zip","pets","newApplication","inputChange","handleFormSubmit","applicationInput","applicantFirstName","applicantLastName","input","label","option","idx","ImageUpload","setSelectedFile","previewSource","setPreviewSource","uploadImage","addUserImage","addPropertyImage","imageTargetId","typeOfImage","previewUploadedFile","uploadImageToCloudinary","base64EncodedImage","imageString","cloudinaryId","menu","tenantMenu","landlordMenu","classNames","classes","filter","Boolean","join","Header","getMe","called","decode","exp","Date","now","expiredToken","me","handleLogout","removeItem","currentPage","setCurrentPage","renderMenu","item","as","open","Button","Panel","App","ApolloProvider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ef7a9c8.chunk.js","sourcesContent":["/**\n * TheLittleGuy store of global action names\n */\n\n/* USER ACTIONS */\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const UPDATE_USER = 'UPDATE_USER';\n\n/* PROPERTY ACTIONS */\nexport const FETCH_ALL_PROPERTIES = 'FETCH_ALL_PROPERTIES';\nexport const EDIT_PROPERTY = 'EDIT_PROPERTY';\nexport const DELETE_PROPERTY = 'DELETE_PROPERTY';\nexport const ADD_PROPERTY = 'ADD_PROPERTY';\n\n/* LANDLORD ACTIONS */\nexport const FETCH_MY_PROPERTIES = 'FETCH_MY_PROPERTIES';\nexport const ADD_MY_PROPERTY = 'ADD_MY_PROPERTY';\nexport const EDIT_MY_PROPERTY = 'EDIT_MY_PROPERTY';\nexport const DELETE_MY_PROPERTY = 'DELETE_MY_PROPERTY';\n\n/* APPLICATION ACTIONS */\nexport const FETCH_APPLICATIONS = 'FETCH_APPLICATIONS';\nexport const EDIT_APPLICATIONS = 'EDIT_APPLICATIONS';","/** LANDLORD PROPERTIES reducer functions */\n\nimport _ from 'lodash';\n\nimport {\n    FETCH_MY_PROPERTIES,\n    ADD_MY_PROPERTY,\n    EDIT_MY_PROPERTY,\n    DELETE_MY_PROPERTY\n} from '../actions';\n\nconst propertyReducer = (state = {}, action) => {\n    switch(action.type) {\n        case FETCH_MY_PROPERTIES: \n            return { ...state, ..._.mapKeys(action.payload, '_id') };\n        case ADD_MY_PROPERTY:\n            return { ...state, [action.payload._id]: action.payload }\n        case EDIT_MY_PROPERTY:\n            let currentValues = state[action.payload._id];\n            let updatedValues = { ...currentValues, ...action.payload };\n\n            return { ...state, [action.payload._id]: updatedValues }\n        case DELETE_MY_PROPERTY:\n            return _.omit(state, action.payload._id);\n        default: \n            return state;\n    }\n};\n\nexport default propertyReducer;","/** ALL PROPERTIES reducer functions */\n\nimport _ from 'lodash';\n\nimport {\n    FETCH_ALL_PROPERTIES,\n    EDIT_PROPERTY,\n    DELETE_PROPERTY,\n    ADD_PROPERTY\n} from '../actions';\n\n\nconst propertyReducer = (state = {}, action) => {\n    switch(action.type) {\n        case FETCH_ALL_PROPERTIES: \n            return { ...state, ..._.mapKeys(action.payload, '_id') };\n        case EDIT_PROPERTY:\n            let currentValues = state[action.payload._id];\n            let updatedValues = { ...currentValues, ...action.payload };\n\n            return { ...state, [action.payload._id]: updatedValues }\n        case DELETE_PROPERTY:\n            return _.omit(state, action.payload._id);\n        case ADD_PROPERTY:\n            return { ...state, [action.payload._id]: action.payload };\n        default: \n            return state;\n    }\n};\n\nexport default propertyReducer;","/** USER REDUCER functions **/\n\nimport { \n    LOG_IN, \n    LOG_OUT, \n    UPDATE_USER \n} from \"../actions\";\n\nconst userReducer = (state = null, action) => {\n    switch(action.type) {\n        case UPDATE_USER:\n            return { ...state, ...action.payload }; \n        case LOG_IN:\n            return { ...state, ...action.payload };\n        case LOG_OUT: \n            return null;\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;","/** APPLICATION reducer functions */\n\nimport _ from 'lodash';\n\nimport {\n    FETCH_APPLICATIONS,\n    EDIT_APPLICATIONS,\n} from '../actions';\n\nconst applicationReducer = (state = {}, action) => {\n    switch(action.type) {\n        case FETCH_APPLICATIONS: \n            return { ...state, ..._.mapKeys(action.payload, '_id') };\n        case EDIT_APPLICATIONS:\n            let currentValues = state[action.payload._id];\n            let updatedValues = { ...currentValues, ...action.payload };\n\n            return { ...state, [action.payload._id]: updatedValues };\n        default: \n            return state;\n    }\n};\n\nexport default applicationReducer;","import { combineReducers } from 'redux';\n\n// bring in reducer files to combine\nimport landlordReducer from './reducers/landlordReducer';\nimport propertyReducer from './reducers/propertyReducer';\nimport userReducer from './reducers/userReducer';\nimport applicationReducer from './reducers/applicationReducer';\n\n// define reducers for redux to use\nconst reducers = combineReducers ({\n    user: userReducer,\n    properties: propertyReducer,\n    landlord: landlordReducer,\n    applications: applicationReducer\n});\n\nexport default reducers;","/** \n * import reducers, create store, export provider component\n */\n\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport reducers from './reducers';\n\n// enable Chrome extension Redux DevTools \nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\n// build store \nconst store = createStore(reducers, devTools);\n\nexport default function StoreProvider(props) {\n  return <Provider store={store} {...props} />;\n}","/**\n * storing token functions here for now, may move to actions later\n */\n\nimport decode from 'jwt-decode';\n\nexport const expiredToken = (token) => {\n    return decode(token).exp < (Date.now() / 1000);     \n}\n\nexport const getToken = () => {\n    return localStorage.getItem('little_guy_token');\n}\n\nexport const saveToken = (token) => {\n    return localStorage.setItem('little_guy_token', token);\n}\n\nexport const removeToken = () => {\n    return localStorage.removeItem('little_guy_token');\n}","/**\n * Apollo Client config file\n */\n\nimport {\n    ApolloClient,\n    InMemoryCache,\n    createHttpLink,\n} from '@apollo/client';\n\nimport { setContext } from '@apollo/client/link/context';\n\nimport { getToken } from '../utils/token';\n\nexport const httpLink = createHttpLink({\n    uri: '/graphql',\n});\n  \nexport const authLink = setContext((_, { headers }) => {\n  const token = getToken();\n  return {\n    headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : '',\n        },\n    };\n});\n  \nexport const client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});","import { gql } from '@apollo/client';\n\n/**  single property\nexport const QUERY_PROPERTY = gql`\n\n`;\n\n// multiple properties\nexport const QUERY_PROPERTIES = gql`\n\n`;\n*/\n\nexport const QUERY_ALL_PROPERTIES = gql`\n   {\n       allProperties {\n            _id\n           addressStreet\n           addressCity\n           addressState\n           addressZip\n           price\n           description\n           owner {\n           \t\tfirstName\n            \tlastName\n           }\n           images\n       }\n   }\n`;\n\nexport const QUERY_MY_PROPERTIES = gql`\n{\n   myProperties {\n            _id\n            addressStreet\n            addressCity\n            addressState\n            addressZip\n            description\n            tenant {\n                firstName\n                lastName\n                email\n            }\n            price\n            images\n    }\n}\n`;\n\n// query me\nexport const QUERY_ME = gql`\n{\n    me {\n        _id\n        username\n        firstName\n        lastName\n        email\n        is_landlord\n        image\n        bio\n        rating\n        addressStreet\n        addressCity\n        addressState\n        addressZip\n        current_property {\n            owner {\n                firstName\n                lastName\n            }\n            addressStreet\n            addressCity\n            addressState\n            addressZip\n            price\n            images\n            description\n        }\n    }\n}\n`;\n\n// get my applications\nexport const QUERY_APPLICATIONS = gql`\n{\n    myApplications {\n        _id\n        applicant {\n          _id\n          firstName\n          lastName\n        }\n        grossAnnualIncome\n        otherTenants\n        creditScore\n        employer\n        typeOfEmployment\n        addressStreet\n        addressCity\n        addressState\n        addressZip\n        propertyId {\n            _id\n            addressStreet\n            addressCity\n            addressState\n            addressZip\n            price\n            images\n            description\n        }\n        status\n    }\n}\n`;","// check email helper function\nexport const checkEmail = (email) => {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    return regex.test(email.toLowerCase());\n}\n\n// check name helper function\nexport const checkName = (name) => {\n    const regex = /^[a-z ,.'-]+$/i;\n    return regex.test(name);\n}\n\n// format prices\nexport const formatPrice = (price) => {\n    price = new Intl.NumberFormat('en-US', {style: 'currency', currency: 'USD', maximumFractionDigits: 2}).format(price);\n\n    return price;\n}","import React from 'react';\nimport {Image} from 'cloudinary-react';\nimport { formatPrice} from '../utils/helpers';\nimport {Link} from 'react-router-dom';\n\nconst UserPropertyCard = ({ property }) => {\n    const {\n        _id,\n        addressStreet,\n        addressCity,\n        addressState,\n        addressZip,\n        price,\n        images,\n        description   \n    } = property;\n    \n    const { firstName, lastName } = property.owner;\n\n    return(\n<div className=\"width-100 mt-10 m-4 bg-CPgray antialiased\">\n<div> \n <div className=\"relative px-4 -mt-16 \">\n   <div className=\"bg-white p-6 m-4 rounded-lg shadow-lg\">\n   <Image cloudName=\"drcmojwwk\" publicId={images[0] ? images[0] : 'the-little-guy/fauxhaus_whjtnp'} className=\"w-52 h-52 object-cover object-center rounded-lg shadow-md m-1.5\" alt=\"property\"/>  \n    <div className=\"flex items-baseline\">\n      <span className=\"text-xs p inline-block rounded-full uppercase font-semibold tracking-wide\">\n        {!firstName ? null : `${firstName} ${lastName}` }\n      </span>\n      <div className=\"ml-2 bg-TLGOrange p-0.5 rounded-full uppercase text-xs text-white font-semibold tracking-wider\">\n    {formatPrice(price)}/month\n  </div>  \n    </div>\n    <h4 className=\"mt-1 text-l font-semibold uppercase leading-tight truncate\">{ addressStreet}</h4>\n  <div className=\"mt-1\">\n    <span className=\"text-gray-600 text-sm\">{`${addressCity}, ${addressState} ${addressZip}`}</span>\n  </div>\n  <div className=\"mt-4\">\n    <span className=\"text-sm text-gray-600\">{description}</span>\n  </div>  \n  <Link to={`/application/${_id}`} >\n      <button className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\"> Apply Now</button>\n    </ Link>\n  </div>\n </div> \n</div>\n</div>\n\n    );\n};\nexport default UserPropertyCard;\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image } from 'cloudinary-react';\n\nimport { formatPrice} from '../utils/helpers';\nconst LandlordPropertyCard = ({ property }) => {\n    const {\n        _id,\n        addressStreet,\n        addressCity,\n        addressState,\n        addressZip,\n        price,\n        images,\n        description   \n    } = property;\n      \n    return(\n<div className=\"mt-10 wrapper m-4 antialiased\">\n<div> \n <div className=\"relative px-4 -mt-16  \">\n   <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n   <Image cloudName=\"drcmojwwk\" publicId={images[0] ? images[0] : 'the-little-guy/fauxhaus_whjtnp'} class=\"object-cover object-center rounded-lg shadow-md m-1.5 w-52 h-52\"/>\n    <div className=\"flex items-baseline\">\n      <div className=\"m-auto bg-TLGOrange p-0.5 rounded-full uppercase text-xs font-semibold tracking-wider\">\n    {formatPrice(price)}/month\n  </div>  \n    </div>\n    <h4 className=\"mt-1 text-l font-semibold uppercase leading-tight truncate\">{ addressStreet}</h4>\n  <div className=\"mt-1\">\n    <span className=\" text-sm\">{`${addressCity}, ${addressState} ${addressZip}`}</span>\n  </div>\n  \n  <Link to={`/landlord/edit/${_id}`}>\n  <button className=\"bg-TLGOrange text-white m-1 hover:bg-white hover:text-TLGOrange font-semibold py-2 px-4 rounded\">Manage</button>  \n  </Link> \n  <Link to={`/landlord/delete/${_id}`}>\n  <button className=\"bg-TLGOrange text-white m-1 hover:bg-white hover:text-TLGOrange font-semibold py-2 px-4 rounded\">Delete</button>  \n  </Link>\n  </div>\n </div> \n </div>\n  </div>\n\n    );\n};\n\nexport default LandlordPropertyCard;\n ","import React from 'react';\nimport UserPropertyCard from './UserPropertyCard';\nimport LandlordPropertyCard from './LandlordPropertyCard';\n\nconst PropertyList = ({ properties, isLandlord }) => {\n    return properties.length ? (\n        <div className=\"flex flex-wrap -mx-4\">\n            {\n                properties.map((property) => {\n                    return isLandlord ? <LandlordPropertyCard property={ property } key={ property._id } /> : <UserPropertyCard property={ property } key={ property._id } />\n                })                \n            }\n        </div>\n    ) : null;\n}\n\nexport default PropertyList;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { QUERY_ALL_PROPERTIES } from '../apollo-client/queries';\n\nimport { FETCH_ALL_PROPERTIES } from '../store/actions';\n\nimport PropertyList from '../components/PropertyList';\n\n\nconst Home = () => {\n    // redux\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.user);\n    const properties = useSelector((state) => Object.values(state.properties));\n\n    // apollo\n    //const [fetchProperties, { loading, data }] = useLazyQuery(QUERY_ALL_PROPERTIES);\n    const { loading, data } = useQuery(QUERY_ALL_PROPERTIES);\n\n    // pull property data on load, send to redux store\n    useEffect(() => {\n        //fetchProperties();\n\n        if(properties.length === 0 && data) {\n            dispatch({\n                type: FETCH_ALL_PROPERTIES,\n                payload: data.allProperties\n            })\n        }\n    }, [loading, data, dispatch]); \n\n    return (\n        <>\n        <h1 className=\"flex justify-center bg-CPgray font-bold text-2xl py-2\">{ user ? `Welcome back, ${user.firstName}!` : null }</h1>\n        <div className=\"min-h-screen flex  justify-center py-20 bg-CPgray py-12 px-4 sm:px-6 lg:px-8\">\n        <div>\n        <PropertyList properties={properties}/>                \n        </div>\n        </div>\n        </>\n    );\n}\n\nexport default Home;","/**\n* custom history object so we can force navigation\n*/\n\nimport { createBrowserHistory } from 'history'; \n\nexport default createBrowserHistory();","import { gql } from '@apollo/client';\n\n/** LOGIN */\nexport const LOGIN = gql`\nmutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        firstName\n        lastName\n        username\n        is_landlord\n        image\n        email\n        bio\n        image\n        addressStreet\n        addressCity\n        addressState\n        addressZip\n        current_property {\n            owner {\n                firstName\n                lastName\n                username\n            }\n            addressStreet\n            addressCity\n            addressState\n            addressZip\n            price\n            images\n            description\n        }\n      }\n    }\n  }\n`;\n\n/** USER MUTATIONS */\n\nexport const SIGN_UP = gql`\n mutation(\n   $firstName: String!,\n   $lastName: String!,\n   $email: String!,\n   $password: String!,\n   $username: String!,\n   $image: String,\n   $is_landlord: Boolean\n   ){\n    signUp(input: {\n      firstName: $firstName,\n      lastName: $lastName,\n      email: $email,\n      password: $password,\n      username: $username,\n      image: $image,\n      is_landlord: $is_landlord\n    }) {\n      token\n      user {\n        _id\n        firstName\n        lastName\n        username\n        bio\n        email\n        image\n        is_landlord\n        current_property {\n            owner {\n                firstName\n                lastName\n                username\n            }\n            addressStreet\n            addressCity\n            addressState\n            addressZip\n            price\n            images\n            description\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER_IMAGE = gql`\nmutation( $cloudinaryId: String) {\n  addUserImage(cloudinaryId: $cloudinaryId)\n}`;\n\nexport const ADD_PROPERTY_IMAGE = gql`\nmutation($_id: ID!, $cloudinaryId: String) {\n  addPropertyImage(_id: $_id, cloudinaryId: $cloudinaryId)\n}`;\n\nexport const UPLOAD_IMAGE = gql`\n  mutation($image:String!){\n    uploadImage(image: $image)\n  }`;\n\nexport const CHANGE_PASSWORD = gql`\nmutation($email: String, $password: String, $newPassword: String) {\n  changePasssword(email: $email, password: $password, newPassword: $newPassword) {\n    _id\n  }\n}`;\n\nexport const UPDATE_USER = gql`\nmutation($firstName: String, $lastName: String, $bio: String, $image: String){\n  updateUser(input: {\n    firstName: $firstName, lastName: $lastName, bio: $bio, image: $image}) {\n      firstName\n      lastName\n      bio\n      image\n    }\n  }\n`;\n/**\nexport const DELETE_USER = gql`\n\n`;\n**/\n\n/** PROPERTY MUTATIONS **/\n\nexport const ADD_PROPERTY = gql`\nmutation(\n    $addressStreet: String,\n    $addressCity: String,\n    $addressState: String,\n    $addressZip: String,\n    $price: Int,\n    $description: String,\n) {\n  addProperty(\n    input: {\n    addressStreet: $addressStreet,\n    addressCity: $addressCity,\n    addressState: $addressState,\n    addressZip: $addressZip,\n    price: $price,\n    description: $description\n  }) {\n    _id\n  }\n}\n`;\n\nexport const UPDATE_PROPERTY = gql`\nmutation(\n    $_id: ID!,\n    $addressStreet: String,\n    $addressCity: String,\n    $addressState: String,\n    $addressZip: String,\n    $price: Int,\n    $description: String\n ) {\n  updateProperty(input: {\n    _id: $_id,\n    addressStreet: $addressStreet,\n    addressCity: $addressCity,\n    addressState: $addressState,\n    addressZip: $addressZip,\n    price: $price,\n    description: $description\n  }) {\n    _id\n  }\n }`;\n\nexport const ADD_APPLICATION = gql`\n  mutation($input: NewApplicationInput!){\n    newApplication(input:$input)\n  }\n`;\n\nexport const UPDATE_APPLICATION = gql`\n  mutation($_id: ID!, $status: String!){\n    updateApplication(_id: $_id, status: $status) {\n      _id\n    }\n  }\n`;\n\nexport const DELETE_PROPERTY = gql`\nmutation(\n    $_id: ID!\n) {\n  deleteProperty(_id: $_id) {\n    _id\n  }\n}`;\n\nexport const UPDATE_TENANT = gql`\nmutation($_id: ID!, $tenant: ID!) {\n  updateTenant(_id: $_id, tenant: $tenant) {\n    _id\n  }\n}`;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LockClosedIcon } from '@heroicons/react/solid'\n\n\n// new stuff for redux \nimport { useDispatch, useSelector } from 'react-redux';\n\n// import history\nimport history from '../config/history';\n\n// import apollo query\nimport { LOGIN } from '../apollo-client/mutations';\nimport { saveToken } from '../utils/token';\n\n/**\n * SEP OF CONCERNS - SHIFT SOME FUNCTIONS TO EXTERNAL FILE AFTER THIS IS WORKING (actions folder?)\n */\n\nconst Login = () => {\n    // redux / global state\n    const dispatch = useDispatch();\n    const state = useSelector((state) => state);\n  \n    // local state\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [displayError, setDisplayError] = useState(null);\n\n    // apollo client\n    const [login, { error }] = useMutation(LOGIN);\n\n    const handleForm = async (e) => {\n        e.preventDefault();\n          \n        // integrating graphQL\n        try {\n\n            const userData = await login({\n                variables: {\n                    email, \n                    password\n                }\n            });\n\n            const token = userData.data.login.token;\n            const userDataRes = userData.data.login.user;\n            console.log(userData.data);\n            //console.log(userDataRes);\n\n            // save token to LocalStorage\n            saveToken(token);\n\n            //  send user data to redux so all components can see it\n            dispatch({\n                type: 'LOG_IN',\n                payload: { ...userDataRes }\n            });\n        }\n        catch(err) {\n            // if there's a problem keep user on page and display error\n            console.log(err)\n            return setDisplayError('Incorrect username or password!');\n        }\n\n        history.push('/');\n    }\n  return (\n    <div className=\"min-h-screen flex justify-center bg-CPgray py-20 px-4 sm:px-6 lg:px-8\">\n    <div className=\"max-w-md w-full space-y-8\">\n      <div>\n        <img\n          className=\"mx-auto h-64 w-auto\"\n          src={`${process.env.PUBLIC_URL}/assets/theLittleGuyCrop.png`}\n          alt=\"TLG\"\n        />\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold \">Log in to your account</h2>\n        <p className=\"mt-2 text-center text-sm\">\n          or{' '}\n          <Link to=\"/signup\" className=\"font-medium hover:text-TLGOrange\">\n            sign up\n          </Link>\n        </p>\n      </div>\n      <form className=\"mt-8 space-y-6\" onSubmit={handleForm}>\n        <div className=\"rounded-md shadow-sm -space-y-px\">\n          <div>\n            <label htmlFor=\"email-address\" className=\"sr-only\">\n              Email address\n            </label>\n            <input\n              name=\"email\"\n              type=\"text\"\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border rounded-t-md focus:outline-none focus:ring-TLGOrange focus:border-TLGOrange focus:z-10 sm:text-sm\"\n              placeholder=\"Email address\"\n              autoComplete=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\" className=\"sr-only\">\n              Password\n            </label>\n            <input\n              name=\"password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border rounded-b-md focus:outline-none focus:ring-TLGOrange focus:border-TLGOrange focus:z-10 sm:text-sm\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n        </div>\n        <div>\n        <label className=\"mt-2 text-center text-sm\">{ displayError ? displayError : null}</label>\n          <button\n            type=\"submit\"\n            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\"\n          >\n            <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n              <LockClosedIcon className=\"h-5 w-5 text-white group-hover:text-TLGOrange\" aria-hidden=\"true\" />\n            </span>\n            Sign in\n          </button>\n        </div>\n      </form>\n      <h1 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">{state.user ? state.user.firstName : null}</h1>\n    </div>\n  </div>\n)\n}\n\nexport default Login;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst About = () => {\n    return (\n        <>\n        <div className=\"bg-CPgray pt-4\">\n<div className=\"p-8 mb-4 mx-4 bg-white rounded-lg shadow\">\n<p className=\"text-center text-2xl font-bold text-TLGOrange \">\n        The Why\n    </p>\n    <p className=\"text-center m-4 text-xl font-light\">\n    We made this app for the little guy because we think everyone should have access to something great. Many landlords only have a few properties that don't warrant paying the high price of most property hosting sites. We wanted those \"little guys\" to have a place to post their properties and connect with their tenants. \n    </p>\n</div>\n<div className=\"p-8 m-4 bg-white rounded-lg shadow\">\n<p className=\"text-center text-2xl font-bold text-TLGOrange \">\n        Coming Soon\n    </p>\n    <ul className=\"list-disc list-inside\">\n    <li className=\"text-center m-4 text-xl font-light\"> Messaging</li>\n    <li className=\"text-center m-4 text-xl font-light\"> Save Properties</li>\n    <li className=\"text-center m-4 text-xl font-light\"> Rent Pay Portal</li>\n    <li className=\"text-center m-4 text-xl font-light\"> Mobile App</li>\n    </ul>\n</div>\n<div className=\"p-8 m-4 bg-white rounded-lg shadow\">\n    <p className=\"text-center text-2xl font-bold text-TLGOrange\">\n        Meet the Team\n    </p>\n    <div className=\"flex items-center md:flex-row justify-evenly\">\n        <div className=\"p-4\">\n            <div className=\"text-center mb-4 opacity-90\">\n            <a href=\"https://samgates.io/\" className=\"block relative\">\n                    <img alt=\"samProfile\" src={`${process.env.PUBLIC_URL}/assets/headshot-sam.jpeg`} className=\"mx-auto object-cover rounded-full h-40 w-40 \"/>\n            </a>\n            </div>\n            <div className=\"text-center\">\n                <p className=\"text-2xl text-gray-800 \">\n                    Sam Gates\n                </p>\n                <p className=\"text-xl text-gray-500  font-light\">\n                    Developer\n                </p>\n            </div>\n            <div className=\"pt-8 flex  w-44 mx-auto text-gray-500 items-center justify-around\">\n                <a href=\"https://github.com/sg0703\">\n                    <svg  width=\"30\" height=\"30\" fill=\"currentColor\" className=\"text-xl hover:text-TLGOrange\" viewBox=\"0 0 1792 1792\">\n                        <path d=\"M896 128q209 0 385.5 103t279.5 279.5 103 385.5q0 251-146.5 451.5t-378.5 277.5q-27 5-40-7t-13-30q0-3 .5-76.5t.5-134.5q0-97-52-142 57-6 102.5-18t94-39 81-66.5 53-105 20.5-150.5q0-119-79-206 37-91-8-204-28-9-81 11t-92 44l-38 24q-93-26-192-26t-192 26q-16-11-42.5-27t-83.5-38.5-85-13.5q-45 113-8 204-79 87-79 206 0 85 20.5 150t52.5 105 80.5 67 94 39 102.5 18q-39 36-49 103-21 10-45 15t-57 5-65.5-21.5-55.5-62.5q-19-32-48.5-52t-49.5-24l-20-3q-21 0-29 4.5t-5 11.5 9 14 13 12l7 5q22 10 43.5 38t31.5 51l10 23q13 38 44 61.5t67 30 69.5 7 55.5-3.5l23-4q0 38 .5 88.5t.5 54.5q0 18-13 30t-40 7q-232-77-378.5-277.5t-146.5-451.5q0-209 103-385.5t279.5-279.5 385.5-103zm-477 1103q3-7-7-12-10-3-13 2-3 7 7 12 9 6 13-2zm31 34q7-5-2-16-10-9-16-3-7 5 2 16 10 10 16 3zm30 45q9-7 0-19-8-13-17-6-9 5 0 18t17 7zm42 42q8-8-4-19-12-12-20-3-9 8 4 19 12 12 20 3zm57 25q3-11-13-16-15-4-19 7t13 15q15 6 19-6zm63 5q0-13-17-11-16 0-16 11 0 13 17 11 16 0 16-11zm58-10q-2-11-18-9-16 3-14 15t18 8 14-14z\">\n                        </path>\n                    </svg>\n                </a>\n                <a href=\"https://www.linkedin.com/in/sam-gates-web-dev/\">\n                    <svg width=\"30\" height=\"30\" fill=\"currentColor\" className=\"text-xl hover:text-TLGOrange\" viewBox=\"0 0 1792 1792\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M477 625v991h-330v-991h330zm21-306q1 73-50.5 122t-135.5 49h-2q-82 0-132-49t-50-122q0-74 51.5-122.5t134.5-48.5 133 48.5 51 122.5zm1166 729v568h-329v-530q0-105-40.5-164.5t-126.5-59.5q-63 0-105.5 34.5t-63.5 85.5q-11 30-11 81v553h-329q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5 114.5-15.5q171 0 275 113.5t104 332.5z\">\n                        </path>\n                    </svg>\n                </a>\n            </div>\n        </div>\n        <div className=\"p-4\">\n            <div className=\"text-center mb-4 opacity-90\">\n                <a href=\"https://juawito.github.io/Portfolio-W2/\" className=\"block relative\">\n                    <img alt=\"juanProfile\" src={`${process.env.PUBLIC_URL}/assets/headshot-juan.jpg`} className=\"mx-auto object-cover rounded-full h-40 w-40 \"/>\n                </a>\n            </div>\n            <div className=\"text-center\">\n                <p className=\"text-2xl text-gray-800 \">\n                    Juan Santiago\n                </p>\n                <p className=\"text-xl text-gray-500 font-light\">\n                    Developer\n                </p>\n            </div>\n            <div className=\"pt-8 flex  w-44 mx-auto text-gray-500 items-center justify-around\">\n                <a href=\"https://github.com/Juawito\">\n                    <svg  width=\"30\" height=\"30\" fill=\"currentColor\" className=\"text-xl hover:text-TLGOrange\" viewBox=\"0 0 1792 1792\">\n                        <path d=\"M896 128q209 0 385.5 103t279.5 279.5 103 385.5q0 251-146.5 451.5t-378.5 277.5q-27 5-40-7t-13-30q0-3 .5-76.5t.5-134.5q0-97-52-142 57-6 102.5-18t94-39 81-66.5 53-105 20.5-150.5q0-119-79-206 37-91-8-204-28-9-81 11t-92 44l-38 24q-93-26-192-26t-192 26q-16-11-42.5-27t-83.5-38.5-85-13.5q-45 113-8 204-79 87-79 206 0 85 20.5 150t52.5 105 80.5 67 94 39 102.5 18q-39 36-49 103-21 10-45 15t-57 5-65.5-21.5-55.5-62.5q-19-32-48.5-52t-49.5-24l-20-3q-21 0-29 4.5t-5 11.5 9 14 13 12l7 5q22 10 43.5 38t31.5 51l10 23q13 38 44 61.5t67 30 69.5 7 55.5-3.5l23-4q0 38 .5 88.5t.5 54.5q0 18-13 30t-40 7q-232-77-378.5-277.5t-146.5-451.5q0-209 103-385.5t279.5-279.5 385.5-103zm-477 1103q3-7-7-12-10-3-13 2-3 7 7 12 9 6 13-2zm31 34q7-5-2-16-10-9-16-3-7 5 2 16 10 10 16 3zm30 45q9-7 0-19-8-13-17-6-9 5 0 18t17 7zm42 42q8-8-4-19-12-12-20-3-9 8 4 19 12 12 20 3zm57 25q3-11-13-16-15-4-19 7t13 15q15 6 19-6zm63 5q0-13-17-11-16 0-16 11 0 13 17 11 16 0 16-11zm58-10q-2-11-18-9-16 3-14 15t18 8 14-14z\">\n                        </path>\n                    </svg>\n                </a>\n                <a href=\"https://www.linkedin.com/in/juan-santiago-a87473192/\">\n                    <svg width=\"30\" height=\"30\" fill=\"currentColor\" className=\"text-xl hover:text-TLGOrange\" viewBox=\"0 0 1792 1792\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M477 625v991h-330v-991h330zm21-306q1 73-50.5 122t-135.5 49h-2q-82 0-132-49t-50-122q0-74 51.5-122.5t134.5-48.5 133 48.5 51 122.5zm1166 729v568h-329v-530q0-105-40.5-164.5t-126.5-59.5q-63 0-105.5 34.5t-63.5 85.5q-11 30-11 81v553h-329q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5 114.5-15.5q171 0 275 113.5t104 332.5z\">\n                        </path>\n                    </svg>\n                </a>\n            </div>\n        </div>\n        <div className=\"p-4\">\n            <div className=\"text-center mb-4 opacity-90\">\n                <a href=\"https://zchalk.github.io/PortfolioReact/\" className=\"block relative\">\n                    <img alt=\"zoeProfile\" src={`${process.env.PUBLIC_URL}/assets/headshot-zoe.jpg`} className=\"mx-auto object-cover rounded-full h-40 w-40 \"/>\n                </a>\n            </div>\n            <div className=\"text-center\">\n                <p className=\"text-2xl text-gray-800\">\n                    Zoe Chalk\n                </p>\n                <p className=\"text-xl text-gray-500 font-light\">\n                    Developer\n                </p>\n            </div>\n            <div className=\"pt-8 flex w-44 mx-auto text-gray-500 items-center justify-around\">\n                \n                <a href=\"https://github.com/zchalk\">\n                    <svg  width=\"30\" height=\"30\" fill=\"currentColor\" className=\"text-xl hover:text-TLGOrange \" viewBox=\"0 0 1792 1792\">\n                        <path d=\"M896 128q209 0 385.5 103t279.5 279.5 103 385.5q0 251-146.5 451.5t-378.5 277.5q-27 5-40-7t-13-30q0-3 .5-76.5t.5-134.5q0-97-52-142 57-6 102.5-18t94-39 81-66.5 53-105 20.5-150.5q0-119-79-206 37-91-8-204-28-9-81 11t-92 44l-38 24q-93-26-192-26t-192 26q-16-11-42.5-27t-83.5-38.5-85-13.5q-45 113-8 204-79 87-79 206 0 85 20.5 150t52.5 105 80.5 67 94 39 102.5 18q-39 36-49 103-21 10-45 15t-57 5-65.5-21.5-55.5-62.5q-19-32-48.5-52t-49.5-24l-20-3q-21 0-29 4.5t-5 11.5 9 14 13 12l7 5q22 10 43.5 38t31.5 51l10 23q13 38 44 61.5t67 30 69.5 7 55.5-3.5l23-4q0 38 .5 88.5t.5 54.5q0 18-13 30t-40 7q-232-77-378.5-277.5t-146.5-451.5q0-209 103-385.5t279.5-279.5 385.5-103zm-477 1103q3-7-7-12-10-3-13 2-3 7 7 12 9 6 13-2zm31 34q7-5-2-16-10-9-16-3-7 5 2 16 10 10 16 3zm30 45q9-7 0-19-8-13-17-6-9 5 0 18t17 7zm42 42q8-8-4-19-12-12-20-3-9 8 4 19 12 12 20 3zm57 25q3-11-13-16-15-4-19 7t13 15q15 6 19-6zm63 5q0-13-17-11-16 0-16 11 0 13 17 11 16 0 16-11zm58-10q-2-11-18-9-16 3-14 15t18 8 14-14z\">\n                        </path>\n                    </svg>\n                </a>\n                <a href=\"#\">\n                    <svg width=\"30\" height=\"30\" fill=\"currentColor\" className=\"text-xl hover:text-TLGOrange\" viewBox=\"0 0 1792 1792\">\n                        <path d=\"M477 625v991h-330v-991h330zm21-306q1 73-50.5 122t-135.5 49h-2q-82 0-132-49t-50-122q0-74 51.5-122.5t134.5-48.5 133 48.5 51 122.5zm1166 729v568h-329v-530q0-105-40.5-164.5t-126.5-59.5q-63 0-105.5 34.5t-63.5 85.5q-11 30-11 81v553h-329q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5 114.5-15.5q171 0 275 113.5t104 332.5z\">\n                        </path>\n                    </svg>\n                </a>\n               \n            </div>\n        </div>\n    </div>\n</div>\n</div>\n</>\n\n    )\n\n}\nexport default About;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\n// tailwind\nimport { LockClosedIcon } from '@heroicons/react/solid'\n\n// new stuff for redux \nimport { useDispatch } from 'react-redux';\n\n// import history\nimport history from '../config/history';\n\n// import apollo query\nimport { SIGN_UP } from '../apollo-client/mutations';\nimport { saveToken } from '../utils/token';\nimport { checkEmail, checkName } from '../utils/helpers';\n\n/**\n * SEP OF CONCERNS - SHIFT SOME FUNCTIONS TO EXTERNAL FILE AFTER THIS IS WORKING (actions folder?)\n */\n\nconst Signup = () => {\n    // redux / global state\n    const dispatch = useDispatch();\n\n    // apollo client\n    const [signUp, { error }] = useMutation(SIGN_UP);\n\n    // set initial values so react doesn't get mad at me\n    const [formState, setFormState] = useState({\n        email: '',\n        username: '',\n        password: '',\n        password_2: '',\n        firstName: '',\n        lastName: '',\n        is_landlord: false\n    });\n\n    const [displayError, setDisplayError] = useState(null);\n\n    const handleForm = async (e) => {\n        e.preventDefault();\n        console.log(formState)\n        // check for for errors\n        setDisplayError(null);\n\n        // destructure state\n        const {\n            email,\n            username,\n            password,\n            password_2,\n            firstName,\n            lastName,\n            is_landlord\n        } = formState;\n\n        // make sure values are filled in and valid\n        if(email === '' || username === '' || password === '' || password_2 === '' || firstName === '' || lastName === '') {\n            return setDisplayError('Please enter all information!');\n        }\n\n        if(!checkEmail(email)) {\n            return setDisplayError('Invalid email address!');\n        }\n\n        if(!checkName(firstName) || !checkName(lastName)) {\n            return setDisplayError('Invalid first or last name!');\n        }\n\n        if(password !== password_2) {\n            return setDisplayError('Passwords don\\'t match!');\n        }\n\n        console.log(is_landlord);\n\n        // if the input is valid, send it to server\n        try {\n            const userData = await signUp({\n                variables: {\n                    password: password,\n                    email: email,\n                    firstName: firstName,\n                    lastName: lastName,\n                    username: username,\n                    image: 'the-little-guy/default_profile_pic_m1vhsn',\n                    is_landlord: is_landlord\n                }\n            });\n\n            const token = userData.data.signUp.token;\n\n            // save token to LocalStorage\n            saveToken(token);\n\n            // send user data to redux so all components can see it\n            // do not send password\n            const reduxData = { ...userData.data.signUp.user };\n\n            dispatch({\n                type: 'LOG_IN',\n                payload: { ...reduxData }\n            });\n        }\n        catch(err) {\n            return setDisplayError(`${err}`);\n        }\n\n        history.push('/profile/update');\n    }\n\n    const handleInput = (e) => {\n        let { name, value } = e.target;\n\n        if(e.target.name === 'is_landlord') {\n            value = e.target.checked;\n        }\n\n        setFormState({\n            ...formState, \n            [name]: value\n        });\n    }\n\n    return (\n    <div className=\"min-h-screen flex  justify-center bg-CPgray py-20 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <img\n            className=\"mx-auto h-64 w-auto\"\n            src={`${process.env.PUBLIC_URL}/assets/theLittleGuyCrop.png`}\n            alt=\"TLG\"\n          />\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold\">Sign up for an account</h2>\n          <p className=\"mt-2 text-center text-sm\">\n            or{' '}\n            <Link to=\"/login\" className=\"font-medium hover:text-TLGOrange\">\n              Log In\n            </Link>\n          </p>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={handleForm}>\n          <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"email-address\" className=\"sr-only\">\n                Email address\n              </label>\n              <input\n                name=\"email\"\n                type=\"text\"\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border rounded-t-md focus:outline-none focus:ring-TLGOrange focus:border-TLGOrange focus:z-10 sm:text-sm\"\n                placeholder=\"Email address\"\n                autoComplete=\"email\"\n                value={formState.email}\n                onChange={handleInput}\n              />\n            </div>\n\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"email-address\" className=\"sr-only\">\n                Username\n              </label>\n              <input\n                name=\"username\"\n                type=\"text\"\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border rounded-b-md focus:outline-none focus:ring-TLGOrange focus:border-TLGOrange focus:z-10 sm:text-sm\"\n                placeholder=\"Username\"\n                autoComplete=\"username\"\n                value={formState.username}\n                onChange={handleInput}\n              />\n            </div>\n\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"email-address\" className=\"sr-only\">\n                First Name \n              </label>\n              <input\n                name=\"firstName\"\n                type=\"text\"\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border rounded-t-md focus:outline-none focus:ring-TLGOrange focus:border-TLGOrange focus:z-10 sm:text-sm\"\n                placeholder=\"First name\"\n                autoComplete=\"firstName\"\n                value={formState.firstName}\n                onChange={handleInput}\n              />\n            </div>\n\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"email-address\" className=\"sr-only\">\n                Last Name\n              </label>\n              <input\n                name=\"lastName\"\n                type=\"text\"\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border rounded-b-md focus:outline-none focus:ring-TLGOrange focus:border-TLGOrange focus:z-10 sm:text-sm\"\n                placeholder=\"Last name\"\n                autoComplete=\"lastName\"\n                value={formState.lastName}\n                onChange={handleInput}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border rounded-t-md focus:outline-none focus:ring-TLGOrange focus:border-TLGOrange focus:z-10 sm:text-sm\"\n                placeholder=\"Password\"\n                value={formState.password}\n                onChange={handleInput}\n              />\n            </div>\n\n\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Confirm password\n              </label>\n              <input\n                name=\"password_2\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border rounded-b-md focus:outline-none focus:ring-TLGOrange focus:border-TLGOrange focus:z-10 sm:text-sm\"\n                placeholder=\"Re-enter Password\"\n                value={formState.password_2}\n                onChange={handleInput}\n              />\n            </div>\n\n            <div>\n                <input \n                          className=\"form-checkbox my-2 text-TLGOrange focus:ring-TLGOrange focus:border-TLGOrange rounded-md\"\n                          type=\"checkbox\" \n                          name=\"is_landlord\"\n                          value={formState.is_landlord}\n                          onChange={handleInput}\n                />\n                <span class=\"m-2 text-sm\">I am a landlord</span> \n            </div>\n\n          </div>\n          <div>\n          <label className=\"mt-2 text-center text-sm text-gray-600\">{ displayError ? displayError : null}</label>\n            <button\n              type=\"submit\"\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\"\n            >\n              <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                <LockClosedIcon className=\"h-5 w-5 text-white group-hover:text-TLGOrange\" aria-hidden=\"true\" />\n              </span>\n              Sign up!\n            </button>\n          </div>\n          </div>\n          </div>\n          </div>\n        </form>\n      </div>\n      </div>\n    );\n}\n\nexport default Signup;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MessageList from '../components/MessageList';\n\nconst Messages = () => {\n    // socketio\n    const state = useSelector((state) => state);\n    return (\n        <>\n        <h1><h1 className=\"uk-heading-small uk-flex uk-flex-center\">{ state.user ? `${state.user.username}, you have socketio messages!` : null }</h1></h1>\n\n        {/* <div className=\"uk-flex uk-flex-center uk-width-1-2 uk-margin-top\">\n            <MessageList/>\n        </div> */}\n\n        </>\n\n    )\n}\n\nexport default Messages;","// react imports\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n// redux imports \nimport { useDispatch, useSelector } from 'react-redux';\n\n// apollo imports\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { QUERY_MY_PROPERTIES } from '../../apollo-client/queries';\n\n// get redux action def \nimport { FETCH_MY_PROPERTIES } from '../../store/actions';\n\n// component imports\nimport PropertyList from '../../components/PropertyList';\n\nconst Landlord = () => {\n    const properties = useSelector((state) => Object.values(state.landlord));\n    const dispatch = useDispatch();\n\n    // apollo\n    const [fetchProperties, { loading, data }] = useLazyQuery(QUERY_MY_PROPERTIES);\n\n    // pull property data on load, send to redux store\n    useEffect(() => {\n      fetchProperties();\n\n        if(data) {\n            dispatch({\n                type: FETCH_MY_PROPERTIES,\n                payload: data.myProperties\n            })\n        }\n    }, [loading]); \n\n    return(\n        <>\n        <div className=\"bg-HDgray\">\n        <h1 className=\"text-2xl pt-4 text-center font-bold leading-tight\">\n            Manage Properties\n        </h1>\n        <h1 className=\"p-5 text-center\">\n            You can add a new property that you own, review applications for properties already on The Little Guy, or manage your properties below. \n        </h1></div>\n          <div>\n\n          <div className=\"bg-HDgray sm:max-w-full max-w-md rounded shadow-md\">\n            <div className=\"shadow-md\">\n              \n              <Link to=\"/landlord/add\" className=\"px-6 py-3 hover:bg-TLGOrange flex shadow-md\"> \n                <div>\n                    <svg className=\"h-7 w-7\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n                    </svg>        \n                </div>\n                <div className=\"pl-3\">\n                  <p className=\"text-sm font-semibold\">\n                    Add property\n                  </p>\n                </div>\n              </Link>\n  \n              <Link to=\"/landlord/applications\" className=\"px-6 py-3 hover:bg-TLGOrange flex shadow-md\"> \n                <div>\n                    <svg className=\"h-7 w-7\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path d=\"M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" />\n                    </svg>\n                </div>\n                <div className=\"pl-3\">\n                  <p className=\"text-sm font-semibold\">\n                    Review applications\n                  </p>\n                </div>\n              </Link>\n  \n            </div >\n            <div className=\"\">\n            </div>\n          </div>\n\n          <div className=\"text-center p-12 bg-CPgray shadow-md\">\n              {\n                  /** <PropertyList properties={properties} />  */\n                  properties && !loading ? \n                  <PropertyList properties={properties} isLandlord={true}/>  : (<h1>You don't have any properties to manage yet!</h1>)\n              }\n            </div>\n\n        </div>\n        </>\n    );\n}\n\nexport default Landlord;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\n// new stuff for redux \nimport { useDispatch, useSelector } from 'react-redux';\n\n// import history\nimport history from '../../config/history';\n\n// import apollo query\nimport { ADD_PROPERTY } from '../../apollo-client/mutations';\n\nconst AddProperty = () => {\n    const { firstName, lastName } = useSelector((state) => state.user);\n    const dispatch = useDispatch();\n\n    // apollo client\n    const [addProperty, { error }] = useMutation(ADD_PROPERTY);\n\n    // set initial values so react doesn't get mad at me\n    const [formState, setFormState] = useState({\n        addressStreet: '',\n        addressCity: '',\n        addressState: '',\n        addressZip: '',\n        rent: 0,\n        description: ''\n    });\n\n    const [displayError, setDisplayError] = useState(null);\n\n    const handleForm = async (e) => {\n        e.preventDefault();\n        console.log(formState)\n        // check for for errors\n        setDisplayError(null);\n\n        // destructure state\n        const {\n            addressStreet,\n            addressCity,\n            addressState,\n            addressZip,\n            rent,\n            description\n        } = formState;\n\n        // make sure values are filled in and valid\n        if(addressStreet === '' || addressCity === '' || addressState === '' || addressZip === '' || rent === '' || description === '') {\n            return setDisplayError('Please enter all information!');\n        }\n\n        const buildInput = {\n          addressStreet: addressStreet,\n          addressCity: addressCity,\n          addressState: addressState,\n          addressZip: addressZip,\n          price: parseInt(rent),\n          description: description,\n          images: ['the-little-guy/fauxhaus_whjtnp']\n        };\n\n        // if the input is valid, send it to server\n        try {\n          const propertyData = await addProperty({\n              variables: buildInput\n          });\n          \n          const propertyId = propertyData.data.addProperty._id;\n\n          // update redux store, add in property ID to object          \n          dispatch({\n              type: 'ADD_MY_PROPERTY',\n              payload: { ...buildInput, _id: propertyId, images: ['the-little-guy/fauxhaus_whjtnp'] }\n          });\n    \n          // update redux store, add in property ID to object          \n          dispatch({\n              type: 'ADD_PROPERTY',\n              payload: { ...buildInput, _id: propertyId, images: ['the-little-guy/fauxhaus_whjtnp'], owner: { firstName, lastName }}\n          });\n\n          history.push(`/image/property/${propertyId}`);\n      }\n      catch(err) {\n          return setDisplayError(`${err}`);\n      }\n    }\n\n    const handleInput = (e) => {\n        let { name, value } = e.target;\n\n        setFormState({\n            ...formState, \n            [name]: value\n        });\n    }\n\n    return (\n      <>\n\n        <div className=\"min-h-screen flex  justify-center py-20 bg-CPgray py-12 px-4 sm:px-6 lg:px-8\">\n          <div className=\"md:grid md:grid-cols-3 md:gap-6 \">\n            <div className=\"md:col-span-1\">\n              <div className=\"px-4 sm:px-0\">\n              <h3 className=\"text-lg font-medium leading-6\">Add Property</h3>\n            </div>\n          </div>\n          <div className=\"mt-5 md:mt-0 md:col-span-2\">\n            <form onSubmit={handleForm}>\n              <div className=\"shadow overflow-hidden sm:rounded-md\">\n                <div className=\"px-4 py-5 bg-white sm:p-6\">\n                  <div className=\"grid grid-cols-6 gap-6\">\n                    <div className=\"col-span-6\">\n                      <label className=\"block text-sm font-medium\">\n                        Street address\n                      </label>\n                      <input\n                        name=\"addressStreet\"\n                        type=\"text\"\n                        placeholder=\"Street Address\"\n                        autoComplete=\"streetAddress\"\n                        value={formState.addressStreet}\n                        onChange={handleInput}\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-6 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        City\n                      </label>\n                      <input\n                        name=\"addressCity\"\n                        type=\"text\"\n                        placeholder=\"Address City\"\n                    autoComplete=\"addressCity\"\n                    value={formState.addressCity}\n                    onChange={handleInput}\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        State\n                      </label>\n                      <input\n                        name=\"addressState\"\n                        type=\"text\"\n                        placeholder=\"Address State\"\n                        autoComplete=\"addressState\"\n                        value={formState.addressState}\n                        onChange={handleInput}\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        ZIP code\n                      </label>\n                      <input\n                        name=\"addressZip\"\n                        type=\"text\"\n                        placeholder=\"Address Zipcode\"\n                        autoComplete=\"addressZip\"\n                        value={formState.addressZip}\n                        onChange={handleInput}\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n                    <div className=\"col-span-6\">\n                      <label className=\"block text-sm font-medium\">\n                        Monthly Rent\n                      </label>\n                      <input\n                        name=\"rent\"\n                        type=\"text\"\n                        placeholder=\"Rent\"\n                        autoComplete=\"rent\"\n                        value={formState.rent}\n                        onChange={handleInput}\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6\">\n                      <label className=\"block text-sm font-medium \">\n                        Description\n                      </label>\n                      <textarea\n                        name=\"description\"\n                        type=\"textarea\"\n                        rows={5}\n                        className=\"shadow-sm focus:ring-TLGOrange focus:border-TLGOrange mt-1 block w-full sm:text-sm border rounded-md\"\n                        placeholder=\"Enter a property description here\"\n                        value={formState.description}\n                        onChange={handleInput}\n                      />\n                    </div>\n                    \n                  </div>\n                </div>\n                <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\"\n                  >\n                    Next\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n\n    </>\n        );\n}\n\nexport default AddProperty;","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\n// apollo hook\nimport { useMutation } from '@apollo/client';\n\n// cloudinary\nimport { Image } from 'cloudinary-react';\n\n// apollo mutations\nimport { DELETE_PROPERTY } from '../../apollo-client/mutations'\n\n// redux action\nimport { DELETE_MY_PROPERTY, DELETE_PROPERTY as DELETE_FROM_MAIN } from '../../store/actions';\n\n// helper formatPrice\nimport { formatPrice} from '../../utils/helpers';\n\n// history object\nimport history from '../../config/history';\n\nconst DeleteProperty = (props) => {\n    const dispatch = useDispatch();\n    const property = useSelector((state) => state.landlord[props.match.params.id]);\n    // apollo client\n    const [deleteProperty, { error }] = useMutation(DELETE_PROPERTY);\n\n    const deleteProp = async () => {\n        await deleteProperty({\n            variables: {\n                _id: property._id\n            }\n        })\n\n        dispatch({\n            type: DELETE_MY_PROPERTY,\n            payload: { _id: property._id }\n        });\n\n        dispatch({\n            type: DELETE_FROM_MAIN,\n            payload: { _id: property._id }\n        })\n\n        history.push('/landlord');\n    }\n\n    return property ? (\n        <div className=\"text-center p-6  border-b\">\n        <div className=\"mt-10 wrapper bg-gray-400 antialiased text-gray-900\">\n        <div> \n        <div className=\"relative px-4 -mt-16  \">\n        <div className=\"bg-white p-6 rounded-lg shadow-lg content-center\">\n        <div className=\"flex justify-center\">\n        <Image className=\"flex\" cloudName=\"drcmojwwk\" publicId={property.images[0]} width=\"150\" height=\"150\" />\n        </div>\n        <div className=\"ml-2 text-teal-600 uppercase text-xs font-semibold tracking-wider\">\n        {formatPrice(property.price)}/month\n        </div>  \n        <h4 className=\"mt-1 text-l font-semibold uppercase leading-tight truncate\">{ property.addressStreet}</h4>\n        <div className=\"mt-1\">\n        <span className=\"text-gray-600 text-sm\">{`${property.addressCity}, ${property.addressState} ${property.addressZip}`}</span>\n        </div>\n        <div className=\"mt-4\">\n        <span className=\"text-sm text-gray-600\">{property.description}</span>\n        </div>\n        <button \n            onClick={() => deleteProp()}\n            className=\"bg-white ml-1 hover:bg-gray-100 text-red-800 font-semibold py-2 px-4 border border-red-400 rounded shadow\"\n        >\n        Delete\n            \n        </button>\n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n    ) : null;\n}\n\nexport default DeleteProperty;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n// tailwind\nimport { LockClosedIcon } from '@heroicons/react/solid'\n// new stuff for redux\nimport { useDispatch, useSelector } from 'react-redux';\n// import history\nimport history from '../../config/history';\n// import apollo query\n// called EDIT_PROPERTY on client side updateProperties server side\nimport { UPDATE_PROPERTY } from '../../apollo-client/mutations';\nimport { EDIT_MY_PROPERTY, EDIT_PROPERTY } from '../../store/actions';\n\nconst EditProperty = (props) => {\n    // get dispatcher for redux\n    const dispatch = useDispatch();\n    const oldInfo = useSelector((state) => state.landlord[props.match.params.id]);\n    const { firstName, lastName } = useSelector((state) => state.user);\n    //console.log(oldInfo)\n\n    // apollo client\n    const [updateProperty, { error }] = useMutation(UPDATE_PROPERTY);\n\n    // set initial values so react doesn't get mad at me\n    const [formState, setFormState] = useState({\n        addressStreet: oldInfo.addressStreet,\n        addressCity: oldInfo.addressCity,\n        addressState: oldInfo.addressState,\n        addressZip: oldInfo.addressZip,\n        rent: oldInfo.price,\n        description: oldInfo.description\n    });\n    const [displayError, setDisplayError] = useState(null);\n    const handleForm = async (e) => {\n        e.preventDefault();\n        console.log(formState)\n        // check for for errors\n        setDisplayError(null);\n        // destructure state\n        const {\n            addressStreet,\n            addressCity,\n            addressState,\n            addressZip,\n            rent,\n            description\n        } = formState;\n        // make sure values are filled in and valid\n        if(addressStreet === '' || addressCity === '' || addressState === '' || addressZip === '' || rent === '' || description === '') {\n            return setDisplayError('Please enter all information!');\n        }\n        /** make sure PRICE is used when sending - that's what data field is in database */\n        const buildInput = {\n          addressStreet: addressStreet,\n          addressCity: addressCity,\n          addressState: addressState,\n          addressZip: addressZip,\n          price: parseInt(rent),\n          description: description\n        };\n\n\n        console.log({ ...buildInput, _id: oldInfo._id });\n\n        // if the input is valid, send it to server\n        // server side takes two args _id and input\n        try {\n          await updateProperty({\n              variables: {\n                  ...buildInput, _id: oldInfo._id\n              }\n          });\n          // update redux store, add in property ID to object\n          dispatch({\n              type: EDIT_MY_PROPERTY,\n              payload: { _id: oldInfo._id, ...buildInput }\n          });\n    \n          // update redux store, add in property ID to object          \n          dispatch({\n            type: EDIT_PROPERTY,\n            payload: { ...buildInput, _id: oldInfo._id, owner: { firstName, lastName }}\n          });\n\n          history.push(`/image/property/${oldInfo._id}`);\n      }\n      catch(err) {\n          return setDisplayError(`${err}`);\n      }\n    }\n    const handleInput = (e) => {\n        let { name, value } = e.target;\n        setFormState({\n            ...formState,\n            [name]: value\n        });\n    }\n    return (\n      <>\n\n      <div className=\"min-h-screen flex  justify-center py-20 bg-CPgray py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"md:grid md:grid-cols-3 md:gap-6 \">\n          <div className=\"md:col-span-1\">\n            <div className=\"px-4 sm:px-0\">\n            <h3 className=\"text-lg font-medium leading-6\">Tenant Application</h3>\n            <p className=\"mt-1 text-sm\">Use a permanent address where you can receive mail.</p>\n          </div>\n        </div>\n        <div className=\"mt-5 md:mt-0 md:col-span-2\">\n          <form onSubmit={handleForm}>\n            <div className=\"shadow overflow-hidden sm:rounded-md\">\n              <div className=\"px-4 py-5 bg-white sm:p-6\">\n                <div className=\"grid grid-cols-6 gap-6\">\n                  <div className=\"col-span-6\">\n                    <label className=\"block text-sm font-medium\">\n                      Street address\n                    </label>\n                    <input\n                      name=\"addressStreet\"\n                      type=\"text\"\n                      placeholder=\"Street Address\"\n                      autoComplete=\"streetAddress\"\n                      value={formState.addressStreet}\n                      onChange={handleInput}\n                      className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                    />\n                  </div>\n  \n                  <div className=\"col-span-6 sm:col-span-6 lg:col-span-2\">\n                    <label className=\"block text-sm font-medium\">\n                      City\n                    </label>\n                    <input\n                      name=\"addressCity\"\n                      type=\"text\"\n                      placeholder=\"Address City\"\n                    autoComplete=\"addressCity\"\n                    value={formState.addressCity}\n                    onChange={handleInput}\n                      className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                    />\n                  </div>\n  \n                  <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                    <label className=\"block text-sm font-medium\">\n                      State\n                    </label>\n                    <input\n                      name=\"addressState\"\n                      type=\"text\"\n                      placeholder=\"Address State\"\n                      autoComplete=\"addressState\"\n                      value={formState.addressState}\n                      onChange={handleInput}\n                      className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                    />\n                  </div>\n  \n                  <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                    <label className=\"block text-sm font-medium\">\n                      ZIP code\n                    </label>\n                    <input\n                      name=\"addressZip\"\n                      type=\"text\"\n                      placeholder=\"Address Zipcode\"\n                      autoComplete=\"addressZip\"\n                      value={formState.addressZip}\n                      onChange={handleInput}\n                      className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                    />\n                  </div>\n                  <div className=\"col-span-6\">\n                    <label className=\"block text-sm font-medium\">\n                      Monthly Rent\n                    </label>\n                    <input\n                      name=\"rent\"\n                      type=\"text\"\n                      placeholder=\"Rent\"\n                      autoComplete=\"rent\"\n                      value={formState.rent}\n                      onChange={handleInput}\n                      className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                    />\n                  </div>\n  \n                  <div className=\"col-span-6\">\n                    <label className=\"block text-sm font-medium \">\n                      Description\n                    </label>\n                    <textarea\n                      name=\"description\"\n                      type=\"textarea\"\n                      rows={5}\n                      className=\"shadow-sm focus:ring-TLGOrange focus:border-TLGOrange mt-1 block w-full sm:text-sm border rounded-md\"\n                      placeholder=\"Enter a property description here\"\n                      value={formState.description}\n                      onChange={handleInput}\n                    />\n                  </div>\n                  \n                </div>\n              </div>\n              <div>\n                <label className=\"ml-6 block text-sm font-medium \">\n                    {oldInfo.tenant ? `Current tenant:  ${oldInfo.tenant.firstName} ${oldInfo.tenant.lastName}` : null} \n                </label>\n                </div>\n              <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                <button\n                  type=\"submit\"\n                  className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\"\n                >\n                  Next\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  \n  </>\n        );\n}\nexport default EditProperty;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_APPLICATIONS } from '../../apollo-client/queries'\n\nimport { FETCH_APPLICATIONS } from '../../store/actions';\n\nconst ReviewApplications = () => {\n    const dispatch = useDispatch();\n\n    const applications = useSelector((state) => Object.values(state.applications));\n\n    const { loading, data } = useQuery( QUERY_APPLICATIONS );\n\n    useEffect(() => {\n        if(applications.length === 0 && data) {\n            dispatch({\n                type: FETCH_APPLICATIONS,\n                payload: data.myApplications\n            })\n        }\n    }, [loading, data, dispatch]);\n\n    const renderApplications = () => {\n        console.log(applications)\n            return applications.map(app => {\n                return (\n                <>\n                <div className=\"p-2 text-center\" key={app._id}>{app.applicant.firstName} {app.applicant.lastName}</div>\n                <div className=\" p-2 text-center col-span-2\">{app.propertyId.addressStreet}</div>\n                <div className=\" p-2 text-center\">\n                    {\n                        app.status ? app.status : 'Pending'\n                    }\n                </div>\n                <div className=\" p-2 text-center\">\n                    <Link to={`/landlord/applications/${app._id}`}>\n                <button className=\"bg-TLGOrange text-white hover:bg-white hover:text-TLGOrange font-semibold py-2 px-4 rounded\">View</button>\n                    </Link>\n                </div>\n                </> \n            );\n        });\n    }\n\n    return (\n        <div className=\"w-full flex justify-center pt-2 bg-CPgray\">\n        <div className=\"grid grid-cols-5 gap-1 sm:w-full lg:w-1/2\">\n        {/* COLUMN HEADERS */}\n        <div className=\"bg-gray-400 p-2 rounded-md text-center col-span-5 font-bold\">Pending Applications</div>\n        { /* RENDER CONTENT HERE */ }\n        { applications ? renderApplications() : null }\n        </div>\n        </div>\n    )\n}\n\nexport default ReviewApplications;","\nimport React, { useState, useEffect } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { UPDATE_APPLICATION, UPDATE_TENANT } from '../../apollo-client/mutations';\n\nimport { EDIT_APPLICATIONS, EDIT_MY_PROPERTY } from '../../store/actions';\n\nimport history from '../../config/history';\n\nconst SingleApplication = (props) => {\n    // set up basic data for redux\n    const dispatch = useDispatch();\n    const application = useSelector((state) => state.applications[props.match.params.id]);\n\n    // apollo config \n    const [updateApplication, { error }] = useMutation( UPDATE_APPLICATION );\n    const [updateTenant] = useMutation(UPDATE_TENANT);\n\n    // set local state for displayError\n    const [displayError, setDisplayError] = useState(null);\n\n    const handleApplication = async (newStatus) => {\n        try {\n            // update application and application state\n            await updateApplication({\n                variables: { \n                    _id: application._id, \n                    status: newStatus\n                }\n            });\n\n            dispatch({\n                type: EDIT_APPLICATIONS,\n                payload: { _id: application._id, status: newStatus }\n            });\n\n            // ONLY IF APPROVED\n            // update property records and state \n            if(newStatus === 'Approved') {\n                await updateTenant({\n                    variables: { \n                        _id: application.propertyId._id, \n                        tenant: application.applicant._id\n                    }\n                });\n\n                dispatch({\n                    type: EDIT_MY_PROPERTY,\n                    payload: { \n                        _id: application.propertyId._id, \n                        tenant: {\n                            firstName: application.applicant.firstName,\n                            lastName: application.applicant.lastName\n                        }\n                    }\n                })\n            }\n\n            // redirect user\n            history.push('/landlord/applications');\n        }\n        catch {\n            setDisplayError(error);\n        }\n    }\n\n    return !application ? null : (\n        <>\n    {/* <div className=\"flex h-screen bg-white-200 items-center justify-center  mt-32 mb-32\">\n        <form className=\"grid bg-whitesmoke rounded-lg shadow-xl w-11/12 md:w-9/12 lg:w-1/2\" onSubmit={(e) => e.preventDefault()}>\n        <div className=\"flex justify-center py-4\">\n            <div className=\"flex bg-purple-200 rounded-full md:p-4 p-2 border-2 border-purple-300\">\n            <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\"></path></svg>\n            </div>\n        </div>\n\n        <div className=\"flex justify-center\">\n            <div className=\"flex\">\n            <h1 className=\"text-gray-600 font-bold md:text-2xl text-xl\">Tenant Application</h1>\n            </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1\">\n            <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\"\n            >First Name</label>\n            <input className=\"py-2 px-3 rounded-lg border-2 border-purple-300 mt-1 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                name=\"first\"\n                type=\"text\"\n                placeholder=\"First\"\n                value={application.applicant.firstName}\n                readOnly\n            />\n            </div>\n            <div className=\"grid grid-cols-1\">\n            <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">Last Name</label>\n            <input className=\"py-2 px-3 rounded-lg border-2 border-purple-300 mt-1 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                name=\"last\"\n                type=\"text\"\n                placeholder=\"Last\"\n                value={application.applicant.lastName}\n                readOnly\n            />\n            </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 mt-5 mx-7\">\n            <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">Street Address</label>\n            <input className=\"py-2 px-3 rounded-lg border-2 border-purple-300 mt-1 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n            name=\"street\"\n            type=\"text\"\n            placeholder=\"\"\n            value={application.addressStreet}\n            readOnly\n            />\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1\">\n            <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">City</label>\n            <input className=\"py-2 px-3 rounded-lg border-2 border-purple-300 mt-1 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                name=\"city\"\n                type=\"text\"\n                placeholder=\"\"\n                value={application.addressCity}\n                readOnly\n            />\n            </div>\n            <div className=\"grid grid-cols-1\">\n            <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">State</label>\n            <input className=\"py-2 px-3 rounded-lg border-2 border-purple-300 mt-1 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                name=\"state\"\n                type=\"text\"\n                placeholder=\"\"\n                value={application.addressState}\n                readOnly\n            />\n            </div>\n            <div className=\"grid grid-cols-1\">\n            <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">Zipcode</label>\n            <input className=\"py-2 px-3 rounded-lg border-2 border-purple-300 mt-1 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                name=\"zip\"\n                type=\"text\"\n                placeholder=\"\"\n                value={application.addressZip}\n                readOnly\n            />\n            </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 mt-5 mx-7\">\n            <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">Credit Score</label>\n            <input className=\"py-2 px-3 rounded-lg border-2 border-purple-300 mt-1 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n            name=\"creditScore\"\n            type=\"text\"\n            placeholder=\"\"\n            value={application.creditScore}\n            readOnly\n            />\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1 mt-5 mx-7\">\n            <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">Annual Gross Income</label>\n            <input className=\"py-2 px-3 rounded-lg border-2 border-purple-300 mt-1 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                name=\"income\"\n                type=\"text\"\n                placeholder=\"\"\n                value={application.grossAnnualIncome}\n                readOnly\n            />\n            </div>\n            <div className=\"grid grid-cols-1 mt-5 mx-7 \">\n            <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">Other Tenants</label>\n            <input className=\"py-2 px-3 rounded-lg border-2 border-purple-300 mt-1 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                name=\"otherTenants\"\n                type=\"text\"\n                placeholder=\"\"\n                value={application.otherTenants}\n                readOnly\n            />\n            </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1 mt-5 mx-7\">\n            <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">Employer</label>\n            <input className=\"py-2 px-3 rounded-lg border-2 border-purple-300 mt-1 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                name=\"employer\"\n                type=\"text\"\n                placeholder=\"\"\n                value={application.employer}\n                readOnly\n            />\n            </div>\n            <div className=\"grid grid-cols-1 mt-5 mx-7 \">\n            <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">Type of Employment</label>\n            <input className=\"py-2 px-3 rounded-lg border-2 border-purple-300 mt-1 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                name=\"typeOfEmployment\"\n                type=\"text\"\n                placeholder=\"\"\n                value={application.typeOfEmployment}\n                readOnly\n            />\n            </div>\n\n        </div>\n        <div className='flex items-center justify-center  md:gap-8 gap-4 pt-5 pb-5'>\n            <button \n            className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\"\n            onClick={() => history.push('/landlord/applications')}\n            >\n                Back\n            </button>\n\n            <button \n            className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\" \n            onClick={() => handleApplication('Approved')}\n            >\n                Approve</button>\n            <button \n            className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\" \n            onClick={() => handleApplication('Denied')}\n            >\n                Deny</button>\n        </div>\n        <h6 className=\"text-center text-red-500 mb-2\">{ displayError }</h6>\n        </form>\n    </div> */}\n\n\n\n\n\n    \n\n          <div className=\"min-h-screen flex  justify-center py-20 bg-CPgray py-12 px-4 sm:px-6 lg:px-8\">\n          <div className=\"md:grid md:grid-cols-3 md:gap-6 \">\n            <div className=\"md:col-span-1\">\n              <div className=\"px-4 sm:px-0\">\n              <h3 className=\"text-lg font-medium leading-6\">Tenant Application</h3>\n              <p className=\"mt-1 text-sm\">Use a permanent address where you can receive mail.</p>\n            </div>\n          </div>\n          <div className=\"mt-5 md:mt-0 md:col-span-2\">\n            <form onSubmit={(e) => e.preventDefault()}>\n              <div className=\"shadow overflow-hidden sm:rounded-md\">\n                <div className=\"px-4 py-5 bg-white sm:p-6\">\n                  <div className=\"grid grid-cols-6 gap-6\">\n                    <div className=\"col-span-6 sm:col-span-3\">\n                      <label className=\"block text-sm font-medium text-gray-700\">\n                        First name\n                      </label>\n                      <input\n                        name=\"first\"\n                        type=\"text\"\n                        placeholder=\"First\"\n                        value={application.applicant.firstName}\n                        readOnly\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3\">\n                      <label className=\"block text-sm font-medium text-gray-700\">\n                        Last name\n                      </label>\n                      <input\n                         name=\"last\"\n                         type=\"text\"\n                         placeholder=\"Last\"\n                         value={application.applicant.lastName}\n                         readOnly\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6\">\n                      <label className=\"block text-sm font-medium\">\n                        Street address\n                      </label>\n                      <input\n                        name=\"street\"\n                        type=\"text\"\n                        placeholder=\"\"\n                        value={application.addressStreet}\n                        readOnly\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-6 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        City\n                      </label>\n                      <input\n                        name=\"city\"\n                        type=\"text\"\n                        placeholder=\"\"\n                        value={application.addressCity}\n                        readOnly\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        State\n                      </label>\n                      <input\n                        name=\"state\"\n                        type=\"text\"\n                        placeholder=\"\"\n                        value={application.addressState}\n                        readOnly\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        ZIP code\n                      </label>\n                      <input\n                        name=\"zip\"\n                        type=\"text\"\n                        placeholder=\"\"\n                        value={application.addressZip}\n                        readOnly\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n                    <div className=\"col-span-6 sm:col-span-6 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        Credit Score\n                      </label>\n                      <input\n                        name=\"creditScore\"\n                        type=\"text\"\n                        placeholder=\"\"\n                        value={application.creditScore}\n                        readOnly\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        Annual Gross Income\n                      </label>\n                      <input\n                        name=\"income\"\n                        type=\"text\"\n                        placeholder=\"\"\n                        value={application.grossAnnualIncome}\n                        readOnly\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        Other Tenants\n                      </label>\n                      <input\n                        name=\"otherTenants\"\n                        type=\"text\"\n                        placeholder=\"\"\n                        value={application.otherTenants}\n                        readOnly\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n                    <div className=\"col-span-6 sm:col-span-3\">\n                      <label className=\"block text-sm font-medium\">\n                        Employer\n                      </label>\n                      <input\n                        name=\"employer\"\n                        type=\"text\"\n                        placeholder=\"\"\n                        value={application.employer}\n                        readOnly\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3\">\n                      <label className=\"block text-sm font-medium\">\n                        Type of Employment\n                      </label>\n                      <input\n                        name=\"typeOfEmployment\"\n                        type=\"text\"\n                        placeholder=\"\"\n                        value={application.typeOfEmployment}\n                        readOnly\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n                    \n                  </div>\n                </div>\n                <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                <button \n            className=\"inline-flex m-2 justify-between py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\"\n            onClick={() => history.push('/landlord/applications')}\n            >\n                Back\n            </button>\n\n            <button \n            className=\"inline-flex m-2 justify-between py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\" \n            onClick={() => handleApplication('Approved')}\n            >\n                Approve</button>\n            <button \n            className=\"inline-flex m-2 justify-between py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\" \n            onClick={() => handleApplication('Denied')}\n            >\n                Deny</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n\n    </>\n\n    )\n    };\n\n    export default SingleApplication;\n\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport UserPropertyCard from \"../../components/UserPropertyCard\";\n\nconst Tenant = () => {\n    const state = useSelector((state) => state);\n\n    console.log(state)\n\n    return (\n        <div>\n\n        <div class=\"bg-white sm:max-w-full max-w-md rounded overflow-hidden shadow-lg\">\n          <div class=\"text-center p-6  border-b\">\n            {\n                state.user && state.user.current_property ? \n                <UserPropertyCard property={state.user.current_property} /> : (<h1>You don't have a home yet!</h1>)\n            }\n          </div>\n          <div class=\"border-b\">\n          {\n                !state.user || !state.user.current_property ? \n                null : (\n                  <a href=\"#\" class=\"px-6 py-3 hover:bg-gray-200 flex\"> \n                  <div>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <div class=\"pl-3\">\n                    <p class=\"text-sm font-semibold\">\n                      Pay rent\n                    </p>\n                  </div>\n                </a>\n              )\n          }\n          </div>\n        </div>\n      </div>\n    );\n\n}\n\nexport default Tenant;\n\n//<PropertyCard property={state.user.current_property} />\n//    return state.user && state.user.current_property ? \n//null : (<h1>False</h1>);\n","import React from 'react';\n\nconst TenantSaved = () => {\n    return (\n        <div>\n            Tenant saved!\n        </div>\n    )\n}\n\nexport default TenantSaved;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport {Image} from 'cloudinary-react';\n\nconst Profile = () => {\n    const state = useSelector((state) => state);\n    console.log(state)\n\n    return(\n        <div className=\"bg-CPgray\">\n\n        <div className=\"bg-HDgray sm:max-w-full max-w-md rounded shadow-md\">\n          <div className=\"text-center p-6 \">\n            <Image className=\"h-24 w-24 rounded-full mx-auto\" cloudName=\"drcmojwwk\"  publicId={state.user.image} alt=\"User Picture\" />\n            <p className=\"pt-2 text-lg font-semibold\">\n              {state.user.firstName + ' ' + state.user.lastName}\n            </p>\n            <p className=\"text-sm text-gray-600\">\n            {state.user.email}\n            </p>\n          </div>\n          <div>\n            \n\n            <Link to=\"/profile/update\" className=\"px-6 py-3 hover:bg-TLGOrange flex shadow-md\"> \n              <div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clipRule=\"evenodd\" />\n                </svg>      \n              </div>\n              <div className=\"pl-3\">\n                <p className=\"text-sm font-semibold\">\n                  Update profile\n                </p>\n              </div>\n            </Link>\n\n            <Link to=\"/profile/password\" className=\"px-6 py-3 hover:bg-TLGOrange flex shadow-md\"> \n              <div>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clipRule=\"evenodd\" />\n                    </svg>\n              </div>\n              <div className=\"pl-3\">\n                <p className=\"text-sm font-semibold\">\n                    Change password\n                </p>\n              </div>\n            </Link>\n\n          </div>\n          <div>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default Profile;","import React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { CHANGE_PASSWORD } from '../../apollo-client/mutations';\nimport { LockClosedIcon } from '@heroicons/react/solid'\n\n// password not stored in redux \n\nconst Password = () => {\n    const [changePassword, { error }] = useMutation(CHANGE_PASSWORD);\n    const [displayError, setDisplayError] = useState(null);\n    \n    const [formState, setFormState] = useState({\n        email: '',\n        password: '',\n        newPassword: '',\n        newPassword2: '',\n        \n    });\n    const handleInput = (e) => {\n        let { name, value } = e.target;\n\n        setFormState({\n            ...formState, \n            [name]: value\n        });\n    }\n    \n\n    const handleForm = async (e) => {\n        e.preventDefault();\n        setDisplayError(null);\n        const {\n            email,\n            password,\n            newPassword,\n            newPassword2\n        } = formState;\n\n        // make sure values are filled in and valid\n        if(email === '' || password === '' || newPassword === '' || newPassword2 === '') {\n            return setDisplayError('Please enter all information!');\n        }\n\n        if(newPassword !== newPassword2) {\n            return setDisplayError('Passwords don\\'t match!');\n        }\n        try {\n            const userData = await changePassword({\n                email: email,\n                password: password,\n                newPassword: newPassword,\n            })}\n            catch (err) {\n                return setDisplayError(`${err}`);\n            }\n    }\n\n    \n    return (\n        <div className=\"min-h-screen flex justify-center bg-CPgray px-4 py-20 sm:px-6 lg:px-8\">\n          <div className=\"max-w-md w-full space-y-8\">\n            <div>\n              <img\n                className=\"mx-auto h-64 w-auto\"\n                src={`${process.env.PUBLIC_URL}/assets/theLittleGuyCrop.png`}\n                alt=\"TLG\"\n              />\n              <h2 className=\"mt-6 text-center text-3xl font-extrabold\">Change your password</h2>\n            </div>\n            <form className=\"mt-8 space-y-6\" onSubmit={handleForm}>\n              <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n              <div className=\"rounded-md shadow-sm -space-y-px\">\n                <div>\n                  <label className=\"sr-only\">\n                    Email address\n                  </label>\n                  <input\n                    name=\"email\"\n                    type=\"text\"\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border rounded-t-md focus:outline-none focus:ring-TLGOrange focus:border-TLGOrange focus:z-10 sm:text-sm\"\n                    placeholder=\"Email address\"\n                    autoComplete=\"email\"\n                    value={formState.email}\n                    onChange={handleInput}\n                  />\n                </div>\n                <div>\n                  <label className=\"sr-only\">\n                    Password\n                  </label>\n                  <input\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border rounded-b-md focus:outline-none focus:ring-TLGOrange focus:border-TLGOrange focus:z-10 sm:text-sm\"\n                    placeholder=\"Current Password\"\n                    value={formState.password}\n                    onChange={handleInput}\n                  />\n                </div>\n              </div>\n              <div className=\"rounded-md shadow-sm -space-y-px\">\n                <div>\n                  <label className=\"sr-only\">\n                    New Password\n                  </label>\n                  <input\n                    name=\"newPassword\"\n                    type=\"password\"\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border rounded-t-md focus:outline-none focus:ring-TLGOrange focus:border-TLGOrange focus:z-10 sm:text-sm\"\n                    placeholder=\"New Password\"\n                    value={formState.newPassword}\n                    onChange={handleInput}\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"password\" className=\"sr-only\">\n                    Repeat New Password\n                  </label>\n                  <input\n                    name=\"newPassword2\"\n                    type=\"password\"\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border rounded-b-md focus:outline-none focus:ring-TLGOrange focus:border-TLGOrange focus:z-10 sm:text-sm\"\n                    placeholder=\"Repeat New Password\"\n                    value={formState.newPassword2}\n                    onChange={handleInput}\n                  />\n                </div>\n              </div>\n              <div>\n              <label className=\"mt-2 text-center text-sm\">{ displayError ? displayError : null}</label>\n                <button\n                  type=\"submit\"\n                  className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\"\n                >\n                  <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                    <LockClosedIcon className=\"h-5 w-5 text-white group-hover:text-TLGOrange\" aria-hidden=\"true\" />\n                  </span>\n                  Change Password\n                </button>\n              </div>\n            </form>\n            {/* <h1 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">{state.user ? state.user.firstName : null}</h1> */}\n          </div>\n        </div>\n      )\n    }\n\nexport default Password;\n","import React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_USER } from '../../apollo-client/mutations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport history from '../../config/history';\n\nconst Update = () => {\nconst dispatch = useDispatch();\nconst user = useSelector((state) => state.user);\nconst [updateUser, { error }] = useMutation(UPDATE_USER);\nconst [fileInputState, setFileInputState] = useState('');\nconst [formState, setFormState] = useState({\n    firstName: '',\n    lastName: '',\n    bio: '',\n    image: '',\n});\nconst handleInput = (e) => {\n  let { name, value } = e.target;\n\n  setFormState({\n      ...formState, \n      [name]: value\n  })};\n  const [displayError, setDisplayError] = useState(null);\n\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    let { name, value } = event.target;\n    console.log(file)\n    setFormState({\n        ...formState, \n        [name]: value\n    })\n\n    const reader = new FileReader();\n        reader.readAsDataURL(file);\n        console.log(reader.result)\n        reader.onload = () => {\n            setFileInputState( reader.result);\n        }\n\n}\nuseEffect(() => {\n    if(user) {\n    setFormState({firstName: user.firstName, lastName: user.lastName, bio: user.bio})\n    setFileInputState(user.image)\n    }\n},[user])\n\n    const handleForm = async (e) => {\n        e.preventDefault();\n        setDisplayError(null);\n\n        // destructure state\n        const {\n            firstName,\n            lastName,\n            bio,\n            image\n        } = formState;\n\n        console.log(fileInputState)\n      try {\n        const userData = await updateUser({\n            variables: {\n                firstName: firstName,\n                lastName: lastName,\n                bio:bio,\n                image: fileInputState? fileInputState : user.image\n            }\n        }); console.log(userData)\n\n        const reduxData = { ...userData.data.updateUser };\n\n        console.log(reduxData)\n            dispatch({\n              type: 'UPDATE_USER',\n              payload: { ...reduxData }\n            });\n          }\n          catch(err) {\n              return setDisplayError(`${err}`);\n          }\n          history.push('/');\n        };\n\n    return(\n            // This form will update: Bio, Email, and picture \n        \n      <>\n        <div className=\"min-h-screen flex  justify-center py-20 bg-CPgray py-12 px-4 sm:px-6 lg:px-8\">\n          <div className=\"md:grid md:grid-cols-3 md:gap-6 \">\n            <div className=\"md:col-span-1\">\n              <div className=\"px-4 sm:px-0\">\n                <h3 className=\"text-lg font-medium leading-6 \">Profile</h3>\n                <p className=\"mt-1 text-sm\">\n                  This information will be displayed publicly so be careful what you share.\n                </p>\n              </div>\n            </div>\n            <div className=\"mt-5 md:mt-0 md:col-span-2\">\n              <form action=\"#\" onSubmit={handleForm}>\n                <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n                  <div className=\"px-4 py-5 bg-white space-y-6 sm:p-6\">\n                  <div className=\"col-span-6 sm:col-span-3\">\n                        <label htmlFor=\"first-name\" className=\"block text-sm font-medium \">\n                          First name\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"firstName\"\n                          id=\"firstName\"\n                          autoComplete=\"given-name\"\n                          value={formState.firstName}\n                          onChange={handleInput}\n                          className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                        />\n                      </div>\n  \n                      <div className=\"col-span-6 sm:col-span-3\">\n                        <label htmlFor=\"last-name\" className=\"block text-sm font-medium\">\n                          Last name\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"lastName\"\n                          id=\"lastName\"\n                          autoComplete=\"family-name\"\n                          value={formState.lastName}\n                          onChange={handleInput}\n                          className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                        />\n                      </div>\n  \n                    <div>\n                      <label htmlFor=\"bio\" className=\"block text-sm font-medium\">\n                        Bio\n                      </label>\n                      <div className=\"mt-1\">\n                        <textarea\n                          id=\"bio\"\n                          name=\"bio\"\n                          rows={3}\n                          className=\"shadow-sm focus:ring-TLGOrange focus:border-TLGOrange mt-1 block w-full sm:text-sm border rounded-md\"\n                          placeholder=\"Help others get to know you\"\n                          defaultValue={''}\n                          value={formState.bio}\n                          onChange={handleInput}\n                        />\n                      </div>\n                    \n                    </div>\n                    <div>\n                        <label className=\"block text-sm font-medium\">Profile photo</label>\n                        <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-borderGray border-dashed rounded-md\">\n                          <div className=\"space-y-1 text-center\">\n                            <svg\n                              className=\"mx-auto h-12 w-12\"\n                              stroke=\"currentColor\"\n                              fill=\"none\"\n                              viewBox=\"0 0 48 48\"\n                              aria-hidden=\"true\"\n                            >\n                              <path\n                                d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n                                strokeWidth={2}\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                              />\n                            </svg>\n                            <div className=\"flex text-sm\">\n                              <label\n                                htmlFor=\"file-upload\"\n                                className=\"relative cursor-pointer bg-white rounded-md font-medium hover:text-TLGOrange\"\n                              >\n                                <span>Upload a file</span>\n                                <input id=\"file-upload\" name=\"image\" type=\"file\" className=\"sr-only\"  onChange={handleFileUpload} />\n                              </label>\n                              <p className=\"pl-1\">or drag and drop</p>\n                            </div>\n                            <p className=\"text-xs\">PNG, JPG, GIF up to 10MB</p>\n                          </div>\n                        </div>\n                      </div>\n                  </div>\n                  \n                  <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                    <button\n                      type=\"submit\"\n                      className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\"\n                    >\n                      Save\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n    \n          \n      </>\n    )\n  }\n  \n\n\nexport default Update;\n","import React, { useState, useEffect } from 'react'\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport {ADD_APPLICATION} from '../apollo-client/mutations'\nimport history from '../config/history';\n\nconst Application = (props) => {\n  const user = useSelector((state) => state.user);\n  const propertyId = props.match.params.id ;\n\n  const initialState = {\n    applicant: user?._id,\n    first: user?.firstName,\n    last: user?.lastName,\n    income: '',\n    street: 'street',\n    city: 'city',\n    state: 'null',\n    zip: 'null',\n    otherTenants: '',\n    creditScore: '',\n    employer: '',\n    typeOfEmployment: '',\n    pets: []\n  }\n  const typeOfEmployment = [\n    {\n      label: \"Self-Employed\",\n      value: \"self-employed\",\n    },\n    {\n      label: \"Employed\",\n      value: \"employed\",\n    },\n    {\n      label: \"Unemployed\",\n      value: \"unemployed\",\n    },\n  ];\n \n  const [formState, setFormState] = useState(initialState);\n  const [displayError, setDisplayError] = useState(null);\n  const [newApplication] = useMutation(ADD_APPLICATION);\n\n  const inputChange = async (e) => {\n    const { name, value } = e.target\n    setFormState({ ...formState, [name]: value });\n  }\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    const applicationInput = {\n      propertyId: propertyId,\n      applicant: formState.applicant,\n      addressStreet: formState.street,\n      addressCity: formState.city,\n      addressState: formState.state,\n      addressZip: formState.addressZip,\n      applicantFirstName: formState.first,\n      applicantLastName: formState.last,\n      grossAnnualIncome: parseInt(formState.income),\n      otherTenants: parseInt(formState.otherTenants),\n      creditScore: parseInt(formState.creditScore),\n      employer: formState.employer,\n      typeOfEmployment: formState.typeOfEmployment,\n    }\n    const res = await newApplication({ variables: {input: applicationInput}});\n    history.push('/');\n  }\n  return (\n          <div className=\"min-h-screen flex  justify-center py-20 bg-CPgray py-12 px-4 sm:px-6 lg:px-8\">\n          <div className=\"md:grid md:grid-cols-3 md:gap-6 \">\n            <div className=\"md:col-span-1\">\n              <div className=\"px-4 sm:px-0\">\n              <h3 className=\"text-lg font-medium leading-6\">Tenant Application</h3>\n              <p className=\"mt-1 text-sm\">Use a permanent address where you can receive mail.</p>\n            </div>\n          </div>\n          <div className=\"mt-5 md:mt-0 md:col-span-2\">\n            <form onSubmit={handleFormSubmit}>\n              <div className=\"shadow overflow-hidden sm:rounded-md\">\n                <div className=\"px-4 py-5 bg-white sm:p-6\">\n                  <div className=\"grid grid-cols-6 gap-6\">\n                    <div className=\"col-span-6 sm:col-span-3\">\n                      <label className=\"block text-sm font-medium text-gray-700\">\n                        First name\n                      </label>\n                      <input\n                        name=\"first\"\n                        type=\"text\"\n                        placeholder=\"First\"\n                        value={formState.first}\n                        onChange={inputChange}\n                        autoComplete=\"given-name\"\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3\">\n                      <label className=\"block text-sm font-medium text-gray-700\">\n                        Last name\n                      </label>\n                      <input\n                        name=\"last\"\n                        type=\"text\"\n                        placeholder=\"Last\"\n                        value={formState.last}\n                        onChange={inputChange}\n                        autoComplete=\"family-name\"\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n\n                    <div className=\"col-span-6\">\n                      <label className=\"block text-sm font-medium\">\n                        Street address\n                      </label>\n                      <input\n                        name=\"street\"\n                        type=\"text\"\n                        placeholder=\"123 Maple St\"\n                        value={formState.street}\n                        onChange={inputChange}\n                        autoComplete=\"street-address\"\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-6 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        City\n                      </label>\n                      <input\n                        name=\"city\"\n                        type=\"text\"\n                        placeholder=\"city\"\n                        value={formState.city}\n                        onChange={inputChange}\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        State\n                      </label>\n                      <input\n                        name=\"state\"\n                        type=\"text\"\n                        placeholder=\"state\"\n                        value={formState.state}\n                        onChange={inputChange}\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        ZIP code\n                      </label>\n                      <input\n                        name=\"zip\"\n                        type=\"text\"\n                        placeholder=\"111111\"\n                        value={formState.zip}\n                        onChange={inputChange}\n                        autoComplete=\"postal-code\"\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n                    <div className=\"col-span-6 sm:col-span-6 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        Credit Score\n                      </label>\n                      <input\n                        name=\"creditScore\"\n                        type=\"text\"\n                        placeholder=\"680\"\n                        value={formState.creditScore}\n                        onChange={inputChange}\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        Annual Gross Income\n                      </label>\n                      <input\n                        name=\"income\"\n                        type=\"text\"\n                        placeholder=\"ex.34,000\"\n                        value={formState.income}\n                        onChange={inputChange}\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                      <label className=\"block text-sm font-medium\">\n                        Other Tenants\n                      </label>\n                      <input\n                        name=\"otherTenants\"\n                        type=\"text\"\n                        placeholder=\"0\"\n                        value={formState.otherTenants}\n                        onChange={inputChange}\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n                    <div className=\"col-span-6 sm:col-span-3\">\n                      <label className=\"block text-sm font-medium\">\n                        Employer\n                      </label>\n                      <input\n                        name=\"employer\"\n                        type=\"text\"\n                        placeholder=\"IBM\"\n                        value={formState.employer}\n                        onChange={inputChange}\n                        className=\"mt-1 focus:ring-TLGOrange focus:border-TLGOrange block w-full shadow-sm sm:text-sm rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3\">\n                      <label className=\"block text-sm font-medium\">\n                        Type of Employment\n                      </label>\n                      <select\n                        value={formState.typeOfEmployment}\n                        name='typeOfEmployment'\n                        onChange={inputChange}\n                        className=\"mt-1 block w-full py-2 px-3 border  bg-white rounded-md shadow-sm focus:outline-none focus:ring-TLGOrange focus:border-TLGOrange sm:text-sm\"\n                      >\n                        {typeOfEmployment.map((option, idx) => (\n                            <option  key={idx} value={option.value}>{option.label}</option>\n              ))}\n                      </select>\n                    </div>\n                    \n                  </div>\n                </div>\n                <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\"\n                  >\n                    Apply\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n  )\n};\n\nexport default Application;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useMutation } from '@apollo/client';\n\nimport { Image } from 'cloudinary-react';\n\nimport { UPLOAD_IMAGE, ADD_USER_IMAGE, ADD_PROPERTY_IMAGE } from '../apollo-client/mutations'\n\n// bring in redux action\nimport { EDIT_MY_PROPERTY, EDIT_PROPERTY } from '../store/actions';\n\n// import history object\nimport history from '../config/history';\n\nconst ImageUpload = (props) => {\n    // initialize state variables for handling data/upload\n    const [fileInputState, setFileInputState] = useState('');\n    const [selectedFile, setSelectedFile] = useState('');\n    const [previewSource, setPreviewSource] = useState('');\n\n    // set up mutations for graphQL\n    const [uploadImage] = useMutation(UPLOAD_IMAGE);\n    const [addUserImage] = useMutation(ADD_USER_IMAGE);\n    const [addPropertyImage] = useMutation(ADD_PROPERTY_IMAGE);\n\n    // get route variables to determine if this is property or user image\n    const imageTargetId = props.match.params.id;\n    const typeOfImage = props.match.params.type;\n\n    // for debugging\n    console.log(imageTargetId);\n    console.log(typeOfImage);\n\n    // redux\n    const dispatch = useDispatch();\n    const property = useSelector((state) => state.landlord[imageTargetId]);\n    const user = useSelector((state) => state.user);\n\n    // calls previewUploadedFile, sets state var to prepare file to be uploaded\n    const handleFileUpload = (event) => {\n        const file = event.target.files[0];\n        console.log(file)\n        setFileInputState(event.target.value);\n        setSelectedFile(file);\n        previewUploadedFile(file);\n    }\n\n    // renders preview of image on page below form\n    const previewUploadedFile = (file) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            setPreviewSource(reader.result);\n            console.log(previewSource);\n        }\n    }\n\n    // event handler for clicking \"UPLOAD IMAGE\" - sends image to cloudinary\n    const handleSubmitFile = (event) => {\n        event.preventDefault();\n        \n        if (!previewSource) return;\n        uploadImageToCloudinary(previewSource, typeOfImage, imageTargetId);\n    }\n    \n    // function to handle mechanics of uploading file to Cloudinary\n    const uploadImageToCloudinary = async (base64EncodedImage) => {\n        try {\n            // upload image and pull data from response\n            const { data } = await uploadImage({\n                variables: { image: base64EncodedImage }\n            });\n\n            // get cloudinary URL for stored image, log for debugging\n            const imageString = data.uploadImage || 'test';\n            console.log(imageString);\n\n            // once we have the cloudinary URL, look at route variables (url string for this page) to see where we want to store ref to image in our database\n            // once we know if it's user or property, send the cloudinary URL string to graphQL to store it in our database with the correct user or property record!\n            if (imageString) {\n                // reset variables\n                // TODO: remove this since we are redirecting\n                setFileInputState('');\n                setPreviewSource('');\n\n                // if type is user, add user image\n                // juan already has context adding user id on the backend\n                if (typeOfImage === 'user') {\n                    await addUserImage({ variables: { cloudinaryId: imageString } });\n                    \n                    // dispatch cloudinary URL to redux\n                    dispatch({\n                        type: 'UPDATE_USER',\n                        payload: { image: imageString }\n                    });\n\n                    // redirect user back to landlord page\n                    history.push('/profile');\n                }\n                else {\n                    // send property image to mongo document for that property\n                    await addPropertyImage({\n                        variables: { _id: imageTargetId, cloudinaryId: imageString }\n                    })\n\n                    // dispatch cloudinary URL to redux\n                    // FOR NOW: replacing the entire array, IN THE FUTURE would update to account for adding multiple images - this is a FUTURE feature\n                    dispatch({\n                        type: EDIT_MY_PROPERTY,\n                        payload: { _id: imageTargetId, images: [imageString] }\n                    });\n\n                    // destructure state\n                    const {\n                        addressStreet,\n                        addressCity,\n                        addressState,\n                        addressZip,\n                        price,\n                        description\n                    } = property;\n\n                    const buildInput = {\n                        _id: property._id,\n                        addressStreet: addressStreet,\n                        addressCity: addressCity,\n                        addressState: addressState,\n                        addressZip: addressZip,\n                        description: description,\n                        price: price\n                      };\n\n                    dispatch({\n                        type: EDIT_PROPERTY,\n                        payload: { ...buildInput, images: [imageString], owner: { firstName: user.firstName, lastName: user.lastName }}\n                    });\n\n                    // redirect user back to landlord page\n                    history.push('/landlord');\n                }\n              \n            }\n        } catch (err) {\n            throw err;\n        }\n    };\n\n    return (\n        <div className=\" flex items-center justify-center bg-gray-50 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8\">\n        <div>\n            <h2 className=\"text-center mt-6 text-3xl font-extrabold text-gray-900\">\n            {\n                 property.images && property.images.length > 0 ? 'Update your image' : 'Upload an image!'   \n            }\n        </h2>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmitFile}>\n            <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n                <input type=\"file\" onChange={handleFileUpload} value={fileInputState} />\n            </div>\n            </div>\n            <div>\n            <label className=\"mt-2 text-center text-sm text-gray-600\">{ /** TODO: ERROR HANDLING HERE */}</label>\n            {/***** IMAGE PREVIEW HERE ****/\n            previewSource && (\n                        <img className=\"m-5\" src={previewSource} alt='preview' />\n            )}\n\n            <button\n                type=\"submit\"\n                className=\"inline-flex m-2 justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\"\n            >\n                Upload Image\n            </button>\n            <button\n                onClick={() => history.push('/landlord')}\n                className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-TLGOrange hover:bg-white hover:text-TLGOrange\"\n            >\n                Continue without image\n            </button>\n            {/***** CURRENT IMAGE HERE ********/\n                property.images && property.images.length > 0 ? \n                <>\n                <div>\n                <h2 className=\"text-center mt-6 text-3xl font-extrabold text-gray-900\">Current image</h2>\n                </div>\n                <Image \n                    cloudName=\"drcmojwwk\" \n                    publicId={property.images[0]} \n                    className=\"mt-5\"\n                />\n                </> : null\n\n            }\n            </div>\n        </form>\n        </div>\n        </div>\n    )\n}\nexport default ImageUpload;","import React, { useEffect, useState, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLazyQuery } from '@apollo/client';\nimport { Disclosure } from '@headlessui/react'\nimport { MenuIcon, XIcon } from '@heroicons/react/outline'\n// using redux hooks api\nimport { useSelector, useDispatch } from 'react-redux';\n\n// get logout action\nimport { LOG_OUT } from '../store/actions';\n\n// use history to redirect user\nimport history from '../config/history';\n\n// import localstorage actions\nimport { expiredToken, getToken, removeToken } from '../utils/token';\n\n// import apollo query\nimport { QUERY_ME } from '../apollo-client/queries';\n\n\n//    {name: 'Saved Properties', to: '/tenant/saved' },\n\nconst menu = [\n  { name: 'Home', to: '/' },\n  { name: 'About', to: '/about' },\n  { name: 'SignUp', to: '/signup' },\n  { name: 'Login', to: '/login' }\n]\nconst tenantMenu = [\n    { name: 'Home', to: '/' },\n    { name: 'About', to: '/about' },\n    { name: 'My Property', to: '/tenant' },\n    {name: 'Profile', to: '/profile' },\n    // {name: 'Messages', to: '/messages' },\n    { name: 'Application', to: '/application' }\n  ]\n  const landlordMenu = [\n    { name: 'Home', to: '/' },\n    { name: 'About', to: '/about' },\n    { name: 'Manage Properties', to: '/landlord' },\n    {name: 'Profile', to: '/profile' },\n    // {name: 'Messages', to: '/messages' }\n  ]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nconst Header = () => {\n    // redux \n    const state = useSelector((state) => state);\n    const dispatch = useDispatch();\n\n    // hook to get user info (if redux store is empty AND token in local storage)\n    const [getMe, { data, called }] = useLazyQuery(QUERY_ME);\n\n    // if user is logged out, check to see if token in local storage - then log them in automatically\n    // this prevents a hard refresh from logging user out!\n    useEffect(() => {\n        if(!state.user) {\n            const token = getToken();\n\n            if(token && !expiredToken(token)) {\n                // get user info using token and update state\n                getMe();\n                \n                if (called && data) {\n                //   send user data to redux so all components can see it\n                    dispatch({\n                        type: 'LOG_IN',\n                        payload: { ...data.me }\n                    });\n                }\n            }\n        }\n    }, [getMe, data, called, state.user, dispatch]);\n\n    /************************************\n     * FOR DEBUGGING: \n     ************************************/\n    console.log(state)\n    \n\n    const handleLogout = () => {\n        // destroy token\n        removeToken();\n\n        // destroy redux data for user\n        dispatch({\n            type: LOG_OUT\n        });\n\n        // redirect user to login\n        history.push('/login');\n    }\n    const [currentPage, setCurrentPage] = useState('Home')\n\n    const renderMenu = () => {\n        if(state.user && state.user.is_landlord) {\n            return(\n                <>\n                {landlordMenu.map((item) => (\n                    <Link\n                      onClick={() => setCurrentPage(item.name)}\n                      key={item.name}\n                      to={item.to}\n                      className={classNames(\n                        currentPage === item.name ? 'bg-TLGOrange text-white' : 'text-gray-300 hover:bg-TLGOrange hover:text-white',\n                        'px-3 py-2 rounded-md text-sm font-medium'\n                      )}\n                    >\n                      {item.name}\n                    </Link>\n                  ))}\n                  <Link to=\"#\" onClick={handleLogout} className= 'text-gray-300 hover:bg-TLGOrange hover:text-white px-3 py-2 rounded-md text-sm font-medium'>Log Out</Link>\n                  </>\n            );\n        }\n        else if (state.user && !state.user.is_landlord) {\n            return(\n                <>\n                {tenantMenu.map((item) => (\n                    <Link\n                      onClick={() => setCurrentPage(item.name)}\n                      key={item.name}\n                      to={item.to}\n                      className={classNames(\n                        currentPage === item.name ? 'bg-TLGOrange text-white' : 'text-gray-300 hover:bg-TLGOrange hover:text-white',\n                        'px-3 py-2 rounded-md text-sm font-medium'\n                      )}\n                    >\n                      {item.name}\n                    </Link>\n                  ))}\n                  <Link to=\"#\" onClick={handleLogout} className= 'text-gray-300 hover:bg-TLGOrange hover:text-white px-3 py-2 rounded-md text-sm font-medium'>Log Out</Link>\n                  </>\n            );\n        }\n        else {\n            return(\n                <>\n                {menu.map((item) => (\n                    <Link\n                      onClick={() => setCurrentPage(item.name)}\n                      key={item.name}\n                      to={item.to}\n                      className={classNames(\n                        currentPage === item.name ? 'bg-TLGOrange text-white' : 'text-gray-300 hover:bg-TLGOrange hover:text-white',\n                        'px-3 py-2 rounded-md text-sm font-medium'\n                      )}\n                    >\n                      {item.name}\n                    </Link>\n                  ))}\n                  </>\n            );\n        }\n    }\n\n    return (\n\n    <Disclosure as=\"nav\" className=\"bg-HDgray\">\n      {({ open }) => (\n        <>\n          <div className=\"max-w-7xl  px-2 sm:px-6 lg:px-8\">\n            <div className=\"relative flex items-center justify-between h-16\">\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                {/* Mobile menu button*/}\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-TLGOrange focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n                  <span className=\"sr-only\">Open main menu</span>\n                  {open ? (\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  ) : (\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  )}\n                </Disclosure.Button>\n              </div>\n              <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div className=\"flex-shrink-0 flex items-center\">\n                <img\n                    className=\"block h-10 w-auto\"\n                    src={`${process.env.PUBLIC_URL}/assets/theLittleGuyCrop.png`}\n                    alt=\"\"\n                  />\n                  <a href='/' className=\" text px-3 py-2 rounded-md text-sm font-medium\">The Little Guy</a>\n                </div>\n                <div className=\"hidden sm:block sm:ml-6\">\n                  <div className=\"flex space-x-4\">\n                    {\n                    renderMenu()\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <Disclosure.Panel className=\"sm:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n              {\n              renderMenu()\n              }\n            </div>\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n  )\n}\n\nexport default Header;","// libraries\nimport React from 'react';\nimport StoreProvider from './store';\nimport { Router, Route, Switch } from 'react-router-dom'; \n\n// import apollo client\nimport { ApolloProvider } from '@apollo/client';\n\n// import apollo client settings\nimport { client } from './config/apollo';\n\n/* MAIN PAGES */\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport About from './pages/About';\nimport Signup from './pages/Signup';\nimport Messages from './pages/Messages';\n\n/* LANDLORD PAGES */\nimport Landlord from './pages/landlord';\nimport AddProperty from './pages/landlord/AddProperty';\nimport DeleteProperty from './pages/landlord/DeleteProperty';\nimport EditProperty from './pages/landlord/EditProperty';\nimport ReviewApplications from './pages/landlord/ReviewApplications';\nimport SingleApplication from './pages/landlord/SingleApplication';\n\n/* TENANT PAGES */\nimport Tenant from './pages/tenant';\nimport TenantSaved from './pages/tenant/TenantSaved';\n\n/* PROFILE PAGES */\nimport Profile from './pages/profile';\nimport Password from './pages/profile/UpdatePassword';\nimport Update from './pages/profile/UpdateProfile';\n\n// testing application page styling\nimport Application from './pages/Application';\n/* IMAGE UPLOADER */\nimport ImageUpload from './pages/ImageUpload';\n\n// header\nimport Header from './components/Header';\n\n// import history so we can navigate user around\nimport history from './config/history';\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <StoreProvider>\n        <Router history={history}>\n          <Header />\n          <Switch>\n            { /* MAIN PATHS */ }\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path='/about' component={About} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/messages\" component={Messages} />\n            <Route exact path=\"/application/:id\" component={Application} />\n            <Route path=\"/image/:type/:id\" component={ImageUpload} />\n            { /* LANDLORD PATHS */ }\n            <Route exact path=\"/landlord\" component={Landlord} />\n            <Route exact path=\"/landlord/add\" component={AddProperty} />\n            <Route exact path=\"/landlord/delete/:id\" component={DeleteProperty} />\n            <Route exact path=\"/landlord/edit/:id\" component={EditProperty} />\n            <Route exact path=\"/landlord/applications\" component={ReviewApplications} />\n            <Route exact path=\"/landlord/applications/:id\" component={SingleApplication} />\n            { /* USER PATHS */ }\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/profile/update\" component={Update} />\n            <Route exact path=\"/profile/password\" component={Password} />\n            { /* TENANT PATHS */ }\n            <Route exact path=\"/tenant\" component={Tenant} />\n            <Route path=\"/tenant/saved\" component={TenantSaved} />\n          </Switch>\n        </Router>\n      </StoreProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}